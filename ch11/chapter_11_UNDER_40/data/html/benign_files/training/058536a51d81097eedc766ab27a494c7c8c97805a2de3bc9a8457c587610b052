<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <title>tGreenplumOutput</title><link rel="stylesheet" type="text/css" href="../css/talend_components_eclipse.css"><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"><meta name="keywords" content="tgreenplumoutput, greenplum"><link rel="home" href="bk-components-rg-en..html" title="Talend Components"><link rel="up" href="ch-databases-appliance-dw.html" title="Chapter&nbsp;8.&nbsp;Databases - appliance/datawarehouse components"><link rel="prev" href="tGreenplumInput.html" title="tGreenplumInput"><link rel="next" href="tGreenplumOutputBulk.html" title="tGreenplumOutputBulk"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">tGreenplumOutput</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="tGreenplumInput.html">Prev</a>&nbsp;</td><th width="60%" align="center">Chapter&nbsp;8.&nbsp;Databases - appliance/datawarehouse components</th><td width="20%" align="right">&nbsp;<a accesskey="n" href="tGreenplumOutputBulk.html">Next</a></td></tr></table><hr></div><div lang="en" class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tGreenplumOutput"></a>tGreenplumOutput</h2></div></div></div><div class="mediaobject"><img src="../images/tGreenplumOutput_icon32_white.png"></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a name="d0e333035"></a>tGreenplumOutput Properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Component Family</strong></span>
							</p>
						</td><td valign="top">
							<p>Databases/Greenplum</p>
						</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Function</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p><span class="emphasis"><strong>tGreenplumOutput</strong></span> writes, updates,
								modifies or deletes the data in a database.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Purpose</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p><span class="emphasis"><strong>tGreenplumOutput</strong></span> executes the
								action defined on the table and/or on the data of a table, according
								to the input flow form the previous component.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Basic settings</strong></span>
							</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Property type</em></span>
							</p>
						</td><td valign="top">
							<p><span class="phrase">Either <span class="emphasis"><strong>Built-in</strong></span> or
										<span class="emphasis"><strong>Repository</strong></span></span>.</p>
							<p>Since version 5.6, both the Built-In mode and the Repository mode are
		available in any of the <span class="emphasis"><em>Talend</em></span> solutions.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Built-in</strong></span>: No property data stored
								centrally.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Repository</strong></span>: Select the repository
								file in which the properties are stored. The fields that follow are
								completed automatically using the data retrieved.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<div class="mediaobject"><img src="../images/Save_Icon.png"></div>
						</td><td valign="top">
							<p>Click this icon to open a database connection wizard and store the
								database connection parameters you set in the component <span class="emphasis"><strong>Basic settings </strong></span>view.</p>
							<p> For more information about setting up and storing database
								connection parameters, see <span class="emphasis"><em>Talend Studio User Guide</em></span>.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Use an existing connection</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box and in the <span class="emphasis"><strong>Component List</strong></span> click the
		relevant connection component to reuse the connection details you already defined.</p>
							<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>When a Job contains the parent Job and the child Job, if you need to share an existing
			connection between the two levels, for example, to share the connection created by the
			parent Job with the child Job, you have to: </p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p>In the parent level, register the database connection to be shared in the
							<span class="emphasis"><strong>Basic settings</strong></span> view of the connection
						component which creates that very database connection.</p></li><li class="listitem"><p>In the child level, use a dedicated connection component to read that
						registered database connection.</p></li></ol></div><p>For an example about how to share a database connection across Job levels, see
					<span class="emphasis"><em><span class="emphasis"><em>Talend Studio</em></span> User
				Guide</em></span>.</p></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Host</em></span>
							</p>
						</td><td valign="top">
							<p>Database server IP address.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Port</em></span>
							</p>
						</td><td valign="top">
							<p>Listening port number of DB server.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Database</em></span>
							</p>
						</td><td valign="top">
							<p>Name of the database</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><em>Username</em></span> and
								<span class="emphasis"><em>Password</em></span></p>
						</td><td valign="top">
							<p>DB user authentication data.</p>
							<p>To enter the password, click the <span class="emphasis"><strong>[...]</strong></span> button next to the
		password field, and then in the pop-up dialog box enter the password between double quotes
		and click <span class="emphasis"><strong>OK</strong></span> to save the settings.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Table</em></span>
							</p>
						</td><td valign="top">
							<p>Name of the table to be written. Note that only one table can be
								written at a time</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Action on table</em></span>
							</p>
						</td><td valign="top">
							<p>On the table defined, you can perform one of the following
								operations:</p>
							<p>
								<span class="emphasis"><strong>None</strong></span>: No operation is carried
								out.</p>
							<p>
								<span class="emphasis"><strong>Drop and create a table</strong></span>: The table
								is removed and created again.</p>
							<p>
								<span class="emphasis"><strong>Create a table</strong></span>: The table does not
								exist and gets created.</p>
							<p>
								<span class="emphasis"><strong>Create a table if not exists</strong></span>: The
								table is created if it does not exist.</p>
							<p>
								<span class="emphasis"><strong>Drop a table if exists and create</strong></span>:
								The table is removed if it already exists and created again.</p>
							<p>
								<span class="emphasis"><strong>Clear a table</strong></span>: The table content is
								deleted.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Action on data</em></span>
							</p>
						</td><td valign="top">
							<p>On the data of the table defined, you can perform:</p>
							<p>
								<span class="emphasis"><strong>Insert</strong></span>: Add new entries to the
								table. If duplicates are found, Job stops.</p>
							<p>
								<span class="emphasis"><strong>Update</strong></span>: Make changes to existing
								entries</p>
							<p><span class="emphasis"><strong>Insert or update</strong></span>: Insert a new record. If the record with
		the given reference already exists, an update would be made.</p>
							<p><span class="emphasis"><strong>Update or insert</strong></span>: Update the record with the given
		reference. If the record does not exist, a new record would be inserted.</p>
							<p>
								<span class="emphasis"><strong>Delete</strong></span>: Remove entries
								corresponding to the input flow.</p>
							<div class="warning" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Warning</h3><p>
									<span class="emphasis"><em> It is necessary to specify at least one
										column as a primary key on which the <span class="emphasis"><strong>Update</strong></span> and <span class="emphasis"><strong>Delete</strong></span> operations are based. You can do that
										by clicking <span class="emphasis"><strong>Edit Schema</strong></span> and
										selecting the check box(es) next to the column(s) you want
										to set as primary key(s). For an advanced use, click the
											<span class="emphasis"><strong>Advanced settings</strong></span> view
										where you can simultaneously define primary keys for the
											<span class="emphasis"><strong>Update</strong></span> and <span class="emphasis"><strong>Delete</strong></span> operations. To do that:
										Select the <span class="emphasis"><strong>Use field
											options</strong></span> check box and then in the <span class="emphasis"><strong>Key in update column</strong></span> , select the
										check boxes next to the column names you want to use as a
										base for the Update operation. Do the same in the <span class="emphasis"><strong>Key in delete column</strong></span> for the
										Delete operation.</em></span>
								</p></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
								Schema</em></span></p>
						</td><td valign="top">
							<p>A schema is a row description. It defines the number of fields to be processed and passed on
		to the next component. The schema is either <span class="emphasis"><strong>Built-In</strong></span> or
		stored remotely in the <span class="emphasis"><strong>Repository</strong></span>.</p>
							<p>Since version 5.6, both the Built-In mode and the Repository mode are
		available in any of the <span class="emphasis"><em>Talend</em></span> solutions.</p>
							<p> </p>
							
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Built-In</strong></span>: You create and store the schema locally for this
		component only. Related topic: see <span class="emphasis"><em>Talend Studio</em></span>
		<span class="emphasis"><em>User Guide</em></span>.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Repository</strong></span>: You have already created the schema and
		stored it in the Repository. You can reuse it in various projects and Job designs. Related
		topic: see <span class="emphasis"><em>Talend Studio</em></span><span class="emphasis"><em> User Guide</em></span>.</p>
							<p>When the schema to be reused has default values that are integers or functions, ensure that
		these default values are not enclosed within quotation marks. If they are, you must remove
		the quotation marks manually.</p>
							<p>For more details, see <a class="link" href="https://help.talend.com/display/KB/Verifying+default+values+in+a+retrieved+schema" target="_top">https://help.talend.com/display/KB/Verifying+default+values+in+a+retrieved+schema</a>.</p>
						</td></tr><tr><td>&nbsp;</td><td>&nbsp;</td><td valign="top">
							<p>Click <span class="emphasis"><strong>Edit schema</strong></span> to make changes to the schema. If the
		current schema is of the <span class="emphasis"><strong>Repository</strong></span> type, three options are
		available:</p>
							<div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p><span class="emphasis"><strong>View schema</strong></span>: choose this option to view the
				schema only.</p></li><li class="listitem"><p><span class="emphasis"><strong>Change to built-in property</strong></span>: choose this option
				to change the schema to <span class="emphasis"><strong>Built-in</strong></span> for local
				changes.</p></li><li class="listitem"><p><span class="emphasis"><strong>Update repository connection</strong></span>: choose this option to change
				the schema stored in the repository and decide whether to propagate the changes to
				all the Jobs upon completion. If you just want to propagate the changes to the
				current Job, you can select <span class="emphasis"><strong>No</strong></span> upon completion and
				choose this schema metadata again in the <span class="emphasis"><strong>[Repository
					Content]</strong></span> window.</p></li></ul></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Die on error</em></span>
							</p>
						</td><td valign="top">
							<p>This check box is selected by default. Clear the check box to skip
								the row on error and complete the process for error-free rows. If
								needed, you can retrieve the rows on error via a <span class="emphasis"><strong>Row</strong></span> &gt; <span class="emphasis"><strong>Rejects</strong></span> link.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Advanced settings</strong></span>
							</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Commit every</em></span>
							</p>
						</td><td valign="top">
							<p>Enter the number of rows to be completed before committing batches
								of rows together into the DB. This option ensures transaction
								quality (but not rollback) and, above all, better performance at
								execution.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Additional Columns</em></span>
							</p>
						</td><td valign="top">
							<p>This option is not offered if you create (with or without drop)
								the DB table. This option allows you to call SQL functions to
								perform actions on columns, which are not insert, nor update or
								delete actions, or action that require particular preprocessing.
							</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Name:</strong></span> Type in the name of the
								schema column to be altered or inserted as new column</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>SQL expression:</strong></span> Type in the SQL
								statement to be executed in order to alter or insert the relevant
								column data.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Position:</strong></span> Select <span class="emphasis"><strong>Before</strong></span>, <span class="emphasis"><strong>Replace</strong></span> or <span class="emphasis"><strong>After</strong></span>
								following the action to be performed on the reference column.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Reference column:</strong></span> Type in a
								column of reference that the <span class="emphasis"><strong>tDBOutput</strong></span> can use to place or replace the new or
								altered column.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><em>Use field option</em></span>s</p>
						</td><td valign="top">
							<p>Select this check box to customize a request, especially when
								there is double action on data.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>tStat</em></span>
								<span class="emphasis"><em>Catcher Statistics</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box to collect log data at the component
								level.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Enable parallel execution</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box to perform high-speed data processing, by treating multiple data flows
		simultaneously. Note that this feature depends on the database or the application ability to
		handle multiple inserts in parallel as well as the number of CPU affected. In the <span class="emphasis"><strong>Number of parallel executions</strong></span> field, either:</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p>Enter the number of parallel executions desired.</p></li><li class="listitem"><p>Press <span class="emphasis"><strong>Ctrl + Space</strong></span> and select the appropriate
					context variable from the list. For further information, see <span class="emphasis"><em>Talend Studio
						User Guide</em></span>. </p></li></ul></div>
							<p>Note that when parallel execution is enabled, it is not possible to use global variables to
		retrieve return values in a subjob.</p>
							<div class="warning" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Warning</h3><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p>
					<span class="emphasis"><em>The <span class="emphasis"><strong>Action on table</strong></span>
						field is not available with the parallelization function. Therefore, you
						must use a <span class="emphasis"><strong>tCreateTable</strong></span> component if you
						want to create a table. </em></span>
				</p></li><li class="listitem"><p>
					<span class="emphasis"><em>When parallel execution is enabled, it is not possible to use global
						variables to retrieve return values in a subjob.</em></span>
				</p></li></ul></div></div>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Dynamic settings</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p>Click the <span class="emphasis"><strong>[+]</strong></span> button to add a row in the table and fill
		the <span class="emphasis"><strong>Code</strong></span> field with a context variable to choose your
		database connection dynamically from multiple connections planned in your Job. This feature
		is useful when you need to access database tables having the same data structure but in
		different databases, especially when you are working in an environment where you cannot
		change your Job settings, for example, when your Job has to be deployed and executed
		independent of <span class="emphasis"><em>Talend Studio</em></span>.</p>
							<p>The <span class="emphasis"><strong>Dynamic settings</strong></span> table is available only when the
			<span class="emphasis"><strong>Use an existing connection</strong></span> check box is selected in the
			<span class="emphasis"><strong>Basic settings</strong></span> view. Once a dynamic parameter is
		defined, the <span class="emphasis"><strong>Component List</strong></span> box in the <span class="emphasis"><strong>Basic settings</strong></span> view becomes unusable. </p>
							<p>For more information on <span class="emphasis"><strong>Dynamic settings</strong></span> and context
		variables, see <span class="emphasis"><em>Talend Studio User Guide</em></span>.</p>
						</td></tr><tr><td valign="top">
							<p><span class="emphasis"><strong>Global Variables</strong></span></p>
						</td><td colspan="2" valign="top">
							<p><span class="emphasis"><strong>NB_LINE</strong></span>: the number of rows processed. This is an After
		variable and it returns an integer.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_UPDATED</strong></span>: the number of rows updated. This is an
		After variable and it returns an integer.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_INSERTED</strong></span>: the number of rows inserted. This is an
		After variable and it returns an integer.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_DELETED</strong></span>: the number of rows deleted. This is an
		After variable and it returns an integer.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_REJECTED</strong></span>: the number of rows rejected. This is an
		After variable and it returns an integer.</p>
							<p><span class="emphasis"><strong>ERROR_MESSAGE</strong></span>: the error message generated by the
		component when an error occurs. This is an After variable and it returns a string. This
		variable functions only if the <span class="emphasis"><strong>Die on error</strong></span> check box is
		cleared, if the component has this check box.</p>
							<p>To fill up a field or expression with a variable, press <span class="emphasis"><strong>Ctrl +
			Space</strong></span> to access the variable list and choose the variable to use from it. </p>
							<p> For further information about variables, see <span class="emphasis"><em>Talend Studio</em></span>
		<span class="emphasis"><em>User Guide</em></span>.</p>
							<p>A Flow variable functions during the execution of a component while an After variable
		functions after the execution of the component.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Usage</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p>This component covers all possible SQL queries for Greenplum
								databases. It allows you to carry out actions on a table or on the
								data of a table in a Greenplum database. It enables you to create a
								reject flow, with a <span class="emphasis"><strong>Row</strong></span> &gt;
									<span class="emphasis"><strong>Reject</strong></span>s link filtering the data
								in error. For a usage example, see <a class="xref" href="tMysqlOutput.html#Raa73790" title="Scenario&nbsp;3: Retrieve data in error with a Reject link"><i>Scenario&nbsp;3: Retrieve data in error with a Reject link</i></a>.</p>
							
							
						</td></tr><tr><td valign="top"><p><span class="emphasis"><strong>Log4j</strong></span></p></td><td colspan="2" valign="top"><p>The activity of this component can be logged using the <span class="emphasis"><em>log4j</em></span> feature. For more information on this feature, see <span class="emphasis"><em>Talend Studio User
        Guide</em></span>.</p><p>For more information on the log4j logging levels, see the Apache documentation at <a class="link" href="http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html" target="_top">http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html</a>.</p></td></tr></tbody></table></div></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a name="d0e334014"></a>Related scenarios</h3></div></div></div><p>For related scenarios, see:</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p>
					<a class="xref" href="tELTGreenplumMap.html#andy-20120906-elt-teltgreenplummap-mapping_data_using_simple_implicit_join" title="Scenario: Mapping data using a simple implicit join"><i>Scenario: Mapping data using a simple implicit join</i></a>. </p></li><li class="listitem"><p>
					<a class="xref" href="tDBOutput.html#Raa47355" title="Scenario: Writing a row to a table in the MySQL database via an ODBC connection"><i>Scenario: Writing a row to a table in the MySQL database via an ODBC
			connection</i></a>. </p></li><li class="listitem"><p>
					<a class="xref" href="tMysqlOutput.html#Raa81493" title="Scenario 1: Adding a new column and altering data in a DB table"><i>Scenario 1: Adding a new column and altering data in a DB table</i></a>.</p></li></ul></div></div></div><div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="tGreenplumInput.html">Prev</a>&nbsp;</td><td width="20%" align="center"><a accesskey="u" href="ch-databases-appliance-dw.html">Up</a></td><td width="40%" align="right">&nbsp;<a accesskey="n" href="tGreenplumOutputBulk.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">tGreenplumInput&nbsp;</td><td width="20%" align="center"><a accesskey="h" href="bk-components-rg-en..html">Home</a></td><td width="40%" align="right" valign="top">&nbsp;tGreenplumOutputBulk</td></tr></table></div></body></html>