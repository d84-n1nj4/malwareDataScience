<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1" />
<title>Eulerian Video Magnification -- Yan Gu</title>
<style type="text/css">
<!--
.STYLE1 {
	font-size: 36px;
	font-weight: bold;
}
.STYLE4 {font-family: "Courier New", Courier, monospace}
.STYLE10 {font-size: 36px}
.STYLE11 {font-size: 24px}
.STYLE12 {font-size: 24px; font-weight: bold; }
.STYLE13 {font-family: "Courier New", Courier, monospace; font-size: 24px; }
.STYLE14 {font-size: 24px; font-family: "Times New Roman", Times, serif; }
.STYLE15 {font-family: "Times New Roman", Times, serif}
-->
</style>
</head>

<body>
<div>
  <h1 align="center" class="STYLE10">Project 2 for grad students - Eulerian Video Magnification</h1>
  <p align="center" class="STYLE1">Yan Gu</p>
</div>
<h1>Overview</h1>
<p class="STYLE11"> In this project, I finished a MATLAB framework of the SIGGRAPH 2012 paper<em> &quot;Eulerian Video Magnification for Revealing Subtle Changes in the World&quot;</em> from MIT CSAIL. This project is named as Eulerian Video Magnification to reveal temporal image variations that tend to be difficult to visualize, that one can amplify blood flow and low-amplitude motion with Eulerian Magnification without needing to perform image segmentation or computing optical flow. </p>
<p class="STYLE11">The algorithm implementation is described in the Framework part in detail.</p>
<h1>Framework</h1>
<p class="STYLE11">The main process of the framework is:</p>
<p class="STYLE11">1. Build the Laplacian pyramid;</p>
<p class="STYLE11">2. Proceed a temporal filtering on each level (and maybe some) of the Laplacian pyramid; </p>
<p class="STYLE11">3. Do pixel change magnification on the result given by the temporal filtering;</p>
<p class="STYLE11">4. Reconstruct the image by changing the value of pixels on the  Laplacian pyramid..</p>
<p class="STYLE12">pseudocode for recursive main process:</p>
<p class="STYLE13">function image = recur_call(a, framesNum, height, width, loFeq, hiFeq, samRate, cutoff, alpha, motion)</p>
<p class="STYLE13">//framesNum: number of frame</p>
<p class="STYLE13">//height &amp; width: image size </p>
<p class="STYLE13">//loFeq &amp; hiFeq: the frequence range we want to manipulate</p>
<p class="STYLE13">//samRate: sample rate</p>
<p class="STYLE13">//cutoff: lambda_c mentioned in the artical</p>
<p class="STYLE13">//alpla &amp; motion: coefficient (number that) we want to amplified  of color and motion </p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;if the level reach the threashold</p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = manipulate(a, frame, height, width, alpha, loFeq, hiFeq, samRate);</p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;else</p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;downSamplingImage = DownSampling(a);</p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp;Get The Laplacian Pyramid Lap;</p>
<p class="STYLE13"> <span class="STYLE4">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if the level reach the minimum Feq require</span></p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;image = manipulate(Lap, frame, height, width, motion, loFeq, hiFeq, samRate);</p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;downSamplingImageRes = recur_call(downSamplingImage, FramesNum, height/2, width/2, loFeq, hiFeq, samRate, cutoff, alpha, motion);</p>
<p class="STYLE13">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; image = image + UpSampling(downSamplingImageRes); </p>
<p class="STYLE11">In the Laplacian pyramid builing process, I used the function <span class="STYLE4">impyramid()</span>, with , <span class="STYLE4">'reduce'</span> or<span class="STYLE4"> 'expand'</span> on the second parameter to get the down-sampling and up-sampling result. Then the Laplacian pyramid can be generated by using the difference between orginal image and the image taking both sampling process. </p>
<p class="STYLE11">In the temporal filtering process, I tried several filters. The result is that the ideal window function get the best visual effort, even if  side lobes will cause some minor artifact that leaking to other frequency. In order to save time, I use FFT to transform the vector in equal length. So the high cutoff frequency will be the &quot;ceil(    hiFeq * frame / samRate ) + 1&quot; -th element of the frequency domain vector. Similarly, the low cutoff frequency is the &quot;floor(   loFeq * frame / samRate ) + 1&quot; -th element of the frequency domain vector.</p>
<p class="STYLE11">Pixel change magnification is very easy. I just get the filtered function from above, and then multiply it with the coefficient I gave, add it back to the orginal pixel value.</p>
<p class="STYLE11">Reconstruction of the image is straight-forward: just use the new image value to reconstuct the pyramid and get the new value of the image. </p>
<p class="STYLE11">Parameters:</p>
<p class="STYLE14"><span class="STYLE13">cutoff</span>: this is the correspondence parameter of <span class="STYLE4">lambda_c</span>. However, this is an easier achievement: based on the paper, we just need to manipulate low frequency signals. This is the threashold of the number of layer on the pyramid that we start to do <span class="STYLE11">temporal filtering process</span>.</p>
<p class="STYLE14"><span class="STYLE13">alpla &amp; motion</span><span class="STYLE15">: Th</span>ese are the <span class="STYLE11">coefficients</span> that <span class="STYLE11">multiply</span> to the filtered function. I gave two parameters in order to better control the effort. Alpha is worked on color amplify, and motion is worked on the Laplacian pyramid. </p>
<p class="STYLE14">I have faced so many difficulties in this project. I appriciate Marynel a lot for her help. </p>
<h1>Display </h1>
<p class="STYLE12">Basic blood flow amplified results: </p>
<p align="center" class="STYLE11">result of &quot;face.mp4&quot;</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/lpRi26FadTE" frameborder="0" allowfullscreen></iframe></p>
</p>
<p align="center" class="STYLE11">Parameters: ( [loFeq, hiFeq, sameRate, cutoff, alpha, motion] ) </p>
<p align="center" class="STYLE11">[0.8 1 30 5 100 1]</p>
<p align="center" class="STYLE11">&nbsp;</p>
<p align="center" class="STYLE11">result of &quot;baby2.mp4&quot;
</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/R8P0NLjgR0I" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters: </p>
<p align="center" class="STYLE11">[2 3 25 5 150 1]</p>
<p align="center" class="STYLE11">&nbsp;</p>
<p align="center" class="STYLE11">&quot;leg.mp4&quot;
</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/qvbYdDKFj1s" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">&nbsp;</p>
<div align="center">
  <div align="center"><span class="STYLE11">color amplified result of &quot;leg.mp4&quot;</span></div>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/PW6784yKAlA" frameborder="0" allowfullscreen></iframe></p>
  <p align="center" class="STYLE11">Parameters: ( [loFeq, hiFeq, sameRate, cutoff, alpha, motion] ) </p>
  <p align="center" class="STYLE11">[1.5 2.5 25 5 20 1]</p>
  <p align="center" class="STYLE11">&nbsp;</p>
  <p></p>
  <div align="center"><span class="STYLE11">motion amplified result of &quot;leg.mp4&quot;</span></div>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/xJWGB5nUZdc" frameborder="0" allowfullscreen></iframe></p>
  <p align="center" class="STYLE11">Parameters: ( [loFeq, hiFeq, sameRate, cutoff, alpha, motion] ) </p>
  <p align="center" class="STYLE11">[1.5 2.5 25 1 10 10]</p>
  <p></p>
</div>
<h3 class="STYLE10">Bells &amp; Whistles</h3>
<p class="STYLE12">Extra slow-amplitude motion results (10pts):</p>
<p align="center" class="STYLE11">slow-amplitude motion aplified result of &quot;wrist.mp4&quot;
</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/rtGlmaA-MR4" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters:</p>
<p align="center" class="STYLE11">[0.8 1.2 30 2 10 20]</p>
<p align="center" class="STYLE11">&nbsp;</p>
<p class="STYLE12"></p>
<p class="STYLE12">Parameter testing (15pts): </p>
<span class="STYLE11">Instead of giving two additional set of parameters on each of    the processed videos, I tried many addtional sets of parameters to the sample image &quot;face.mp4&quot; to see what is the effort of each parameter.</span>
<p align="center" class="STYLE11">result of &quot;face.mp4&quot;
</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/lpRi26FadTE" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters: </p>
<p align="center" class="STYLE11">[0.8 1 30 5 100 1]</p>
<p align="center" class="STYLE11">&nbsp;</p>
<p class="STYLE11">If I add the loFeq and hiFeq to [2,3], which does not fix to the frequency with the blood flow of face, it will receive a ramdom jumping result on each spuerpixel, and they are not correspondence. </p>
<p align="center" class="STYLE11">failure case of &quot;face.mp4&quot;</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/_l3JxG4zeMg" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters: </p>
<p align="center" class="STYLE11">[2 3 30 5 100 1]</p>
<p align="left" class="STYLE11">&nbsp;</p>
<p align="left" class="STYLE11">This is the result of motion amplified result using the parameters given in the paper. </p>
<p align="center" class="STYLE11">motion amplified result of &quot;face.mp4&quot;</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/C2UwXR9Oq_o" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters: </p>
<p align="center" class="STYLE11">[0.8 1 30 2 1 20]</p>
<p align="center" class="STYLE11">&nbsp;</p>
<p align="left" class="STYLE11">If I change the cutoff layer into 0, the details are much amplified, and cause minor artifacts. This proofs the reason that it is unnecessary to amplify those very detailed signals. </p>
<p align="center" class="STYLE11">another motion amplified result of &quot;face.mp4&quot;</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/LZIAnCckxeA" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters: </p>
<p align="center" class="STYLE11">[0.8 1 30 0 1 20]</p>
<p align="left" class="STYLE11">&nbsp;</p>
<p class="STYLE11">If I change the amplified coefficient into very large scale, it will cause clearly artifacts on the result. </p>
<p align="center" class="STYLE11">failure case of motion amplified result of &quot;face.mp4&quot;</p>
</p>
<p align="center" class="STYLE11"><iframe width="600" height="400" src="http://www.youtube.com/embed/C8Iqd4r_CvA" frameborder="0" allowfullscreen></iframe></p>
<p align="center" class="STYLE11">Parameters: </p>
<p align="center" class="STYLE11">[0.8 1 30 0 1 100]</p>
<p>&nbsp;</p>
</body>

</html>
