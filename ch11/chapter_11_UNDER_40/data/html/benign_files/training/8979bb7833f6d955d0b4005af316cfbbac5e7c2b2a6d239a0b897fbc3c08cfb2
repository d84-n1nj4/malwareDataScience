<html><head>
      <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
   <title>tOracleRow</title><link rel="stylesheet" type="text/css" href="../css/talend_components_eclipse.css"><meta name="generator" content="DocBook XSL Stylesheets V1.78.1"><meta name="keywords" content="toraclerow, oracle"><link rel="home" href="bk-components-rg-en..html" title="Talend Components"><link rel="up" href="ch-databases-traditional.html" title="Chapter&nbsp;7.&nbsp;Databases - traditional components"><link rel="prev" href="tOracleRollback.html" title="tOracleRollback"><link rel="next" href="tOracleSP.html" title="tOracleSP"></head><body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF"><div class="navheader"><table width="100%" summary="Navigation header"><tr><th colspan="3" align="center">tOracleRow</th></tr><tr><td width="20%" align="left"><a accesskey="p" href="tOracleRollback.html">Prev</a>&nbsp;</td><th width="60%" align="center">Chapter&nbsp;7.&nbsp;Databases - traditional components</th><td width="20%" align="right">&nbsp;<a accesskey="n" href="tOracleSP.html">Next</a></td></tr></table><hr></div><div lang="en" class="section"><div class="titlepage"><div><div><h2 class="title" style="clear: both"><a name="tOracleRow"></a>tOracleRow</h2></div></div></div><div class="mediaobject"><img src="../images/tOracleRow_icon32_white.png"></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a name="d0e310229"></a>tOracleRow properties</h3></div></div></div><div class="informaltable"><table border="1"><colgroup><col class="c1"><col class="c2"><col class="c3"></colgroup><tbody><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Component family</strong></span>
							</p>
						</td><td valign="top">
							<p>Databases/Oracle</p>
						</td><td valign="top">&nbsp;</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Function</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p><span class="emphasis"><strong>tOracleRow</strong></span> is the specific
								component for this database query. It executes the SQL query stated
								onto the specified database. The row suffix means the component
								implements a flow in the job design although it doesn't provide
								output. </p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Purpose</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p>Depending on the nature of the query and the database, <span class="emphasis"><strong>tOracleRow</strong></span> acts on the actual DB
								structure or on the data (although without handling data). The
								SQLBuilder tool helps you write easily your SQL statements.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Basic settings</strong></span>
							</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Property type</em></span>
							</p>
						</td><td valign="top">
							<p><span class="phrase">Either <span class="emphasis"><strong>Built-in</strong></span> or
										<span class="emphasis"><strong>Repository</strong></span></span>.</p>
							<p>Since version 5.6, both the Built-In mode and the Repository mode are
		available in any of the <span class="emphasis"><em>Talend</em></span> solutions.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Built-in</strong></span>: No property data stored
								centrally.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Repository</strong></span>: Select the repository
								file in which the properties are stored. The fields that follow are
								completed automatically using the data retrieved.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Use an existing connection</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box and in the <span class="emphasis"><strong>Component List</strong></span> click the
		relevant connection component to reuse the connection details you already defined.</p>
							<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>When a Job contains the parent Job and the child Job, if you need to share an existing
			connection between the two levels, for example, to share the connection created by the
			parent Job with the child Job, you have to: </p><div class="orderedlist"><ol class="orderedlist" type="1"><li class="listitem"><p>In the parent level, register the database connection to be shared in the
							<span class="emphasis"><strong>Basic settings</strong></span> view of the connection
						component which creates that very database connection.</p></li><li class="listitem"><p>In the child level, use a dedicated connection component to read that
						registered database connection.</p></li></ol></div><p>For an example about how to share a database connection across Job levels, see
					<span class="emphasis"><em><span class="emphasis"><em>Talend Studio</em></span> User
				Guide</em></span>.</p></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Connection type</em></span>
							</p>
						</td><td valign="top">
							<p>Drop-down list of available drivers:</p>
							<p>
								<span class="emphasis"><strong>Oracle OCI</strong></span>: Select this connection
								type to use Oracle Call Interface with a set of C-language software
								APIs that provide an interface to the Oracle database.</p>
							<p>
								<span class="emphasis"><strong>Oracle Service Name</strong></span>: Select this
								connection type to use the TNS alias that you give when you connect
								to the remote database. </p>
							<p>
								<span class="emphasis"><strong>Oracle SID</strong></span>: Select this connection
								type to uniquely identify a particular database on a system.</p>
							<p>
								<span class="emphasis"><strong>Oracle Custom</strong></span>: Select this
								connection type to access a clustered database.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>DB Version</em></span>
							</p>
						</td><td valign="top">
							<p>Select the Oracle version in use.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Host</em></span>
							</p>
						</td><td valign="top">
							<p>Database server IP address.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Port</em></span>
							</p>
						</td><td valign="top">
							<p>Listening port number of DB server.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Database</em></span>
							</p>
						</td><td valign="top">
							<p>Name of the database.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><em>Username</em></span> and
								<span class="emphasis"><em>Password</em></span></p>
						</td><td valign="top">
							<p>DB user authentication data.</p>
							<p>To enter the password, click the <span class="emphasis"><strong>[...]</strong></span> button next to the
		password field, and then in the pop-up dialog box enter the password between double quotes
		and click <span class="emphasis"><strong>OK</strong></span> to save the settings.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><em>Schema</em></span> and <span class="emphasis"><em>Edit
								Schema</em></span></p>
						</td><td valign="top">
							<p>A schema is a row description. It defines the number of fields to be processed and passed on
		to the next component. The schema is either <span class="emphasis"><strong>Built-In</strong></span> or
		stored remotely in the <span class="emphasis"><strong>Repository</strong></span>.</p>
							<p>Since version 5.6, both the Built-In mode and the Repository mode are
		available in any of the <span class="emphasis"><em>Talend</em></span> solutions.</p>
							<p>Click <span class="emphasis"><strong>Edit schema</strong></span> to make changes to the schema. If the
		current schema is of the <span class="emphasis"><strong>Repository</strong></span> type, three options are
		available:</p>
							<div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p><span class="emphasis"><strong>View schema</strong></span>: choose this option to view the
				schema only.</p></li><li class="listitem"><p><span class="emphasis"><strong>Change to built-in property</strong></span>: choose this option
				to change the schema to <span class="emphasis"><strong>Built-in</strong></span> for local
				changes.</p></li><li class="listitem"><p><span class="emphasis"><strong>Update repository connection</strong></span>: choose this option to change
				the schema stored in the repository and decide whether to propagate the changes to
				all the Jobs upon completion. If you just want to propagate the changes to the
				current Job, you can select <span class="emphasis"><strong>No</strong></span> upon completion and
				choose this schema metadata again in the <span class="emphasis"><strong>[Repository
					Content]</strong></span> window.</p></li></ul></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Built-In</strong></span>: You create and store the schema locally for this
		component only. Related topic: see <span class="emphasis"><em>Talend Studio</em></span>
		<span class="emphasis"><em>User Guide</em></span>.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Repository</strong></span>: You have already created the schema and
		stored it in the Repository. You can reuse it in various projects and Job designs. Related
		topic: see <span class="emphasis"><em>Talend Studio</em></span><span class="emphasis"><em> User Guide</em></span>.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Query type</em></span>
							</p>
						</td><td valign="top">
							<p>Either <span class="emphasis"><strong>Built-in</strong></span> or <span class="emphasis"><strong>Repository</strong></span>. </p>
							<p>Since version 5.6, both the Built-In mode and the Repository mode are
		available in any of the <span class="emphasis"><em>Talend</em></span> solutions.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Built-in</strong></span>: Fill in manually the
								query statement or build it graphically using SQLBuilder</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p><span class="emphasis"><strong>Repository</strong></span>: Select the relevant
								query stored in the Repository. The Query field gets accordingly
								filled in.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Query</em></span>
							</p>
						</td><td valign="top">
							<p>Enter your DB query paying particularly attention to properly
								sequence the fields in order to match the schema definition. </p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Use NB_LINE_</em></span>
							</p>
						</td><td valign="top">
							<p>This option allows you feed the variable with the number of rows
								inserted/updated/deleted to the next component or subjob. This field
								only applies if the query entered in <span class="emphasis"><strong>Query</strong></span> field is a INSERT, UPDATE or DELETE query.</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p><span class="emphasis"><strong>NONE</strong></span>: does not feed
											the variable. </p></li><li class="listitem"><p><span class="emphasis"><strong>INSERTED</strong></span>: feeds the
											variable with the number of rows inserted. </p></li><li class="listitem"><p><span class="emphasis"><strong>UPDATED</strong></span>: feeds the
											variable with the number of rows updated.</p></li><li class="listitem"><p><span class="emphasis"><strong>DELETED</strong></span>: feeds the
											variable with the number of rows deleted.</p></li></ul></div>
						</td></tr><tr><td>&nbsp;</td><td valign="top">
							<span class="emphasis"><em>Specify a data source alias</em></span>
						</td><td valign="top">
							<p>Select this check box and specify the alias of a data source created on the <span class="emphasis"><em>Talend Runtime</em></span> side to use the shared connection pool defined in the data source configuration.
		This option works only when you deploy and run your Job in <span class="emphasis"><em>Talend Runtime</em></span>. </p>
							<div class="warning" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Warning</h3><p>If you use the component's own DB configuration, your data source connection will be
			closed at the end of the component. To prevent this from happening, use a shared DB
			connection with the data source alias specified.</p></div>
							<p>This check box is not available when the <span class="emphasis"><strong>Use an existing
			connection</strong></span> check box is selected. </p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Die on error</em></span>
							</p>
						</td><td valign="top">
							<p>This check box is selected by default. Clear the check box to skip
								the row on error and complete the process for error-free rows. If
								needed, you can retrieve the rows on error via a <span class="emphasis"><strong>Row</strong></span> &gt; <span class="emphasis"><strong>Rejects</strong></span> link.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Advanced settings</strong></span>
							</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Propagate QUERY's recordset</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box to insert the result of the query into a
								COLUMN of the current flow. Select this column from the <span class="emphasis"><strong>use column</strong></span> list.</p>
							<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>This option allows the component to have a different schema
									from that of the preceding component. Moreover, the column that
									holds the QUERY's recordset should be set to the type of
										<span class="emphasis"><em>Object</em></span> and this component
									is usually followed by <span class="emphasis"><strong>tParseRecordSet</strong></span>.</p></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Use PreparedStatement</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box if you want to query the database using a
								PreparedStatement. In the <span class="emphasis"><strong>Set
									PreparedStatement Parameter </strong></span>table, define the
								parameters represented by "?" in the SQL instruction of the
									<span class="emphasis"><strong>Query</strong></span> field in the <span class="emphasis"><strong>Basic Settings</strong></span> tab.</p>
							<p>
								<span class="emphasis"><strong>Parameter Index</strong></span>: Enter the
								parameter position in the SQL instruction.</p>
							<p>
								<span class="emphasis"><strong>Parameter Type</strong></span>: Enter the parameter
								type.</p>
							<p>
								<span class="emphasis"><strong>Parameter Value</strong></span>: Enter the
								parameter value.</p>
							<p> </p>
							<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;"><h3 class="title">Note</h3><p>This option is very useful if you need to execute the same
									query several times. Performance levels are increased. You can
									also use PreparedStatement to avoid SQL injection. For a
									detailed scenario of utilizing this feature, see <a class="xref" href="tMysqlRow.html#Raa48944" title="Scenario 2: Using PreparedStatement objects to query data"><i>Scenario 2: Using PreparedStatement objects to query data</i></a>.</p></div>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>Commit every</em></span>
							</p>
						</td><td valign="top">
							<p>Number of rows to be completed before committing batches of rows
								together into the DB. This option ensures transaction quality (but
								not rollback) and above all better performance on executions.</p>
						</td></tr><tr><td>
							<p>&nbsp;</p>
						</td><td valign="top">
							<p>
								<span class="emphasis"><em>tStatCatcher Statistics</em></span>
							</p>
						</td><td valign="top">
							<p>Select this check box to collect log data at the component
								level.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Dynamic settings</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p>Click the <span class="emphasis"><strong>[+]</strong></span> button to add a row in the table and fill
		the <span class="emphasis"><strong>Code</strong></span> field with a context variable to choose your
		database connection dynamically from multiple connections planned in your Job. This feature
		is useful when you need to access database tables having the same data structure but in
		different databases, especially when you are working in an environment where you cannot
		change your Job settings, for example, when your Job has to be deployed and executed
		independent of <span class="emphasis"><em>Talend Studio</em></span>.</p>
							<p>The <span class="emphasis"><strong>Dynamic settings</strong></span> table is available only when the
			<span class="emphasis"><strong>Use an existing connection</strong></span> check box is selected in the
			<span class="emphasis"><strong>Basic settings</strong></span> view. Once a dynamic parameter is
		defined, the <span class="emphasis"><strong>Component List</strong></span> box in the <span class="emphasis"><strong>Basic settings</strong></span> view becomes unusable. </p>
							<p>For more information on <span class="emphasis"><strong>Dynamic settings</strong></span> and context
		variables, see <span class="emphasis"><em>Talend Studio User Guide</em></span>.</p>
						</td></tr><tr><td valign="top">
							<p><span class="emphasis"><strong>Global Variables</strong></span></p>
						</td><td colspan="2" valign="top">
							<p>
		<span class="emphasis"><strong>QUERY</strong></span>: the SQL query statement being processed. This is a
		Flow variable and it returns a string.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_UPDATED</strong></span>: the number of rows updated. This is an
		After variable and it returns an integer.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_INSERTED</strong></span>: the number of rows inserted. This is an
		After variable and it returns an integer.</p>
							<p>
		<span class="emphasis"><strong>NB_LINE_DELETED</strong></span>: the number of rows deleted. This is an
		After variable and it returns an integer.</p>
							<p><span class="emphasis"><strong>ERROR_MESSAGE</strong></span>: the error message generated by the
		component when an error occurs. This is an After variable and it returns a string. This
		variable functions only if the <span class="emphasis"><strong>Die on error</strong></span> check box is
		cleared, if the component has this check box.</p>
							<p>A Flow variable functions during the execution of a component while an After variable
		functions after the execution of the component.</p>
							<p>To fill up a field or expression with a variable, press <span class="emphasis"><strong>Ctrl +
			Space</strong></span> to access the variable list and choose the variable to use from it. </p>
							<p> For further information about variables, see <span class="emphasis"><em>Talend Studio</em></span>
		<span class="emphasis"><em>User Guide</em></span>.</p>
						</td></tr><tr><td valign="top">
							<p>
								<span class="emphasis"><strong>Usage</strong></span>
							</p>
						</td><td colspan="2" valign="top">
							<p>This component offers the flexibility of the DB query and covers
								all possible SQL queries.</p>
						</td></tr><tr><td valign="top"><p><span class="emphasis"><strong>Log4j</strong></span></p></td><td colspan="2" valign="top"><p>The activity of this component can be logged using the <span class="emphasis"><em>log4j</em></span> feature. For more information on this feature, see <span class="emphasis"><em>Talend Studio User
        Guide</em></span>.</p><p>For more information on the log4j logging levels, see the Apache documentation at <a class="link" href="http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html" target="_top">http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/Level.html</a>.</p></td></tr></tbody></table></div></div><div class="section"><div class="titlepage"><div><div><h3 class="title"><a name="d0e311115"></a>Related scenarios</h3></div></div></div><p>For related topics, see:</p><div class="itemizedlist"><ul class="itemizedlist" style="list-style-type: disc; "><li class="listitem"><p>
					<a class="xref" href="tMysqlRow.html#andy-20121018-database-tmysqlrow-combining_two_flows_for_selective_output" title="Scenario 3: Combining two flows for selective output"><i>Scenario 3: Combining two flows for selective output </i></a>
				</p></li><li class="listitem"><p><a class="xref" href="tDBSQLRow.html#Raa17909" title="Scenario: Resetting a DB auto-increment"><i>Scenario: Resetting a DB auto-increment</i></a>.</p></li><li class="listitem"><p><a class="xref" href="tMysqlRow.html#Raa11099" title="Scenario 1: Removing and regenerating a MySQL table index"><i>Scenario 1: Removing and regenerating a MySQL table index</i></a>.</p></li><li class="listitem"><p><a class="xref" href="tMysqlRow.html#Raa48944" title="Scenario 2: Using PreparedStatement objects to query data"><i>Scenario 2: Using PreparedStatement objects to query data</i></a>.</p></li></ul></div></div></div><div class="navfooter"><hr><table width="100%" summary="Navigation footer"><tr><td width="40%" align="left"><a accesskey="p" href="tOracleRollback.html">Prev</a>&nbsp;</td><td width="20%" align="center"><a accesskey="u" href="ch-databases-traditional.html">Up</a></td><td width="40%" align="right">&nbsp;<a accesskey="n" href="tOracleSP.html">Next</a></td></tr><tr><td width="40%" align="left" valign="top">tOracleRollback&nbsp;</td><td width="20%" align="center"><a accesskey="h" href="bk-components-rg-en..html">Home</a></td><td width="40%" align="right" valign="top">&nbsp;tOracleSP</td></tr></table></div></body></html>