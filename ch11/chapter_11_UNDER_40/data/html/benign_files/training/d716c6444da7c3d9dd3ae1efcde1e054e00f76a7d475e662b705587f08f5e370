<!DOCTYPE html>
<!--html5-->
<!--[if IE 8]>    <html class="no-js lt-ie9" lang="en"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
	<meta http-equiv="X-UA-Compatible" content="IE=edge" />
  	<meta charset="utf-8" />

	<title>Arduino - ReadWrite </title>
	<link rel="shortcut icon" type="image/x-icon" href="//www.arduino.cc/en/favicon.png" />

	<script src="//code.jquery.com/jquery-1.10.2.min.js"></script>

	<link rel="stylesheet" href="//content.arduino.cc/legacy/fonts/fonts.css" type="text/css" />
	<link rel="stylesheet" href="//content.arduino.cc/legacy/css/arduino-icons.css">
	<link rel="stylesheet" href="//content.arduino.cc/legacy/css/animation.css"><!--[if IE 7]>
	<link rel="stylesheet" href="//content.arduino.cc/legacy/css/arduino-icons-ie7.css"><![endif]-->
	<!--[if gte IE 9]><!-->
	<link rel='stylesheet' href='//content.arduino.cc/legacy/css/foundation2.css' type='text/css' />
	<!--<![endif]-->
	<!--[if IE 8]>
		<link rel='stylesheet' href='//content.arduino.cc/legacy/css/foundation_ie8.css' type='text/css' />
	<![endif]-->
	<link rel='stylesheet' href='//content.arduino.cc/legacy/css/arduino_code_highlight.css' type='text/css' />
	<link rel="stylesheet" type="text/css" media="screen" href="//content.arduino.cc/legacy/css/typeplate.css">
	<link rel='stylesheet' href='//www.arduino.cc/en/pub/skins/arduinoWide_SSO/css/arduinoWide_SSO.css' type='text/css' />

	<link rel='stylesheet' href='//content.arduino.cc/legacy/css/common.css' type='text/css' />
	<link rel="stylesheet" href="//content.arduino.cc/legacy/css/download_page.css" />
	<link href="https://plus.google.com/114839908922424087554" rel="publisher" />

	<!-- embedded JS and CSS from PmWiki plugins -->
	<!--HeaderText--><style type='text/css'><!--
  ul, ol, pre, dl, p { margin-top:0px; margin-bottom:0px; }
  code { white-space: nowrap; }
  .vspace { margin-top:1.33em; }
  .indent { margin-left:40px; }
  .outdent { margin-left:40px; text-indent:-40px; }
  a.createlinktext { text-decoration:none; border-bottom:1px dotted gray; }
  a.createlink { text-decoration:none; position:relative; top:-0.5em;
    font-weight:bold; font-size:smaller; border-bottom:none; }
  img { border:0px; }
  
span.anchor {
	float: left;
	font-size: 10px;
	margin-left: -10px;
	width: 10px;
    position:relative; top:-0.1em;
	text-align: center;
}
span.anchor a { text-decoration: none; }
span.anchor a:hover { text-decoration: underline; }
ol.toc { text-indent:-20px; list-style: none; }
ol.toc ol.toc { text-indent:-40px; }
div.tocfloat { font-size: smaller; margin-bottom: 10px;
    border-top: 1px dotted #555555; border-bottom: 1px dotted #555555;
    padding-top: 5px; padding-bottom: 5px; 
    width: 38%; float: right; margin-left: 10px; clear: right;
    margin-right:-13px; padding-right: 13px; padding-left: 13px;
    background-color: #eeeeee; }
div.toc { font-size: smaller; 
    padding: 5px; border: 1px dotted #cccccc;
    background: #f7f7f7;
    margin-bottom: 10px; }
div.toc p { background-color: #f9f6d6;
    margin-top:-5px;   padding-top: 5px;
    margin-left:-5px;  padding-left: 5px;
    margin-right:-5px; padding-right: 5px;
    padding-bottom: 3px;
    border-bottom:  1px dotted #cccccc; }.editconflict { color:green; 
  font-style:italic; margin-top:1.33em; margin-bottom:1.33em; }

  table.markup { border: 2px dotted #ccf; width:90%; }
  td.markup1, td.markup2 { padding-left:10px; padding-right:10px; }
  td.markup1 { border-bottom: 1px solid #ccf; }
  div.faq { margin-left:2em; }
  div.faq p.question { margin: 1em 0 0.75em -2em; font-weight:bold; }
  div.faq hr { margin-left: -2em; }
   
    .frame 
      { border:1px solid #cccccc; padding:4px; background-color:#f9f9f9; }
    .lfloat { float:left; margin-right:0.5em; }
    .rfloat { float:right; margin-left:0.5em; }
a.varlink { text-decoration:none; }
/**
 * GeSHi (C) 2004 - 2007 Nigel McNie, 2007 - 2008 Benny Baumann
 * (http://qbnz.com/highlighter/ and http://geshi.org/)
 */
.arduino  {font-family:monospace;}
.arduino .imp {font-weight: bold; color: red;}
.arduino .kw1 {color: #CC6600;}
.arduino .kw2 {color: #006699;}
.arduino .kw3 {color: #CC6600; font-weight: bold;}
.arduino .co1 {color: #7E7E7E; font-style: italic;}
.arduino .co2 {color: #7E7E7E;}
.arduino .coMULTI {color: #7E7E7E; font-style: italic;}
.arduino .es0 {color: #000099; font-weight: bold;}
.arduino .es1 {color: #000099; font-weight: bold;}
.arduino .es2 {color: #660099; font-weight: bold;}
.arduino .es3 {color: #660099; font-weight: bold;}
.arduino .es4 {color: #660099; font-weight: bold;}
.arduino .es5 {color: #006699; font-weight: bold;}
.arduino .br0 {color: #000000;}
.arduino .sy0 {color: #000000;}
.arduino .st0 {color: #0066CC;}
.arduino .nu0 {color: #000000;}
.arduino .nu6 {color: #208080;}
.arduino .nu8 {color: #208080;}
.arduino .nu12 {color: #208080;}
.arduino .nu16 {color:#800080;}
.arduino .nu17 {color:#800080;}
.arduino .nu18 {color:#800080;}
.arduino .nu19 {color:#800080;}
.arduino .me1 {color: #ff1493;}
.arduino .me2 {color: #ff1493;}
.arduino span.xtra { display:block; }

.sourceblocklink {
  text-align: right;
  font-size: smaller;
}
.sourceblocktext {
  padding: 0.5em;
  color: #000000;
  background-color: #ECF1F1;
}
.sourceblock .sourceblocktext .arduino {
  font-family: 'TyponineSans Monospace Regular 4';
  font-size: 14px;
  line-height: 18px;
}
code {
  background-color: #ECF1F1;
  font-size: 15px;
  line-height: 19px;
  padding: 2px 10px 5px 10px;
}
.sourceblocktext div {
  font-family: monospace;
  font-size: small;
  line-height: 1;
  height: 1%;
}
.sourceblocktext div.head,
.sourceblocktext div.foot {
  font: italic medium serif;
  padding: 0.5em;
}

--></style><script type="text/javascript">
function toggle(obj) {
    var elstyle = document.getElementById(obj).style;
    var text    = document.getElementById(obj + "tog");
    if (elstyle.display == 'none') {
        elstyle.display = 'block';
        text.innerHTML = "hide";
    } else {
        elstyle.display = 'none';
        text.innerHTML = "show";
    }
}
</script><script src="//www.arduino.cc/en/pub/galleria/galleria-1.2.6.min.js"></script><script type="text/javascript">Galleria.loadTheme("//www.arduino.cc/en/pub/galleria/themes/classic/galleria.classic.min.js");</script>  <meta name='robots' content='index,follow' />

	

	<script src="//content.arduino.cc/legacy/js/vendor/custom.modernizr.js"></script>

	<!-- do not remove none of those lines, comments embedding in pages will break! -->
	<script src="//code.jquery.com/ui/1.10.3/jquery-ui.min.js" type="text/javascript"></script>
	<script src="https://checkout.stripe.com/checkout.js" type="text/javascript"></script>
	<script src="https://www.arduino.cc/en/pub/js/software_download.js" type="text/javascript"></script><!-- keep https! -->
	<link rel='stylesheet' href='//code.jquery.com/ui/1.10.3/themes/smoothness/jquery-ui.min.css' type='text/css' />

	<style>
      .temporary {
        height: 120px;
        background-color: #00979d;
      }

      @media screen and (max-width: 1024px) {
        .temporary {
          height: 54px;
        }   
      }
    </style>
</head>

<body style="background:none">

	
	<div id="header" class="temporary"></div>

	<div id="page">

		<br class="clear"/>

		<div id="pagetext">
				<!--PageText-->
<div id='wikitext'>
<p class='vspace'></p><p>
<div class="subHeader row">
  <div class="breadcrumb columns large-10 medium-10">
    <p>
      <a class="wikilink" href="/en/Tutorial/HomePage">Tutorials </a>
      >  <a class="wikilink" href="/en/Tutorial/LibraryExamples"> Examples from Libraries </a> >  SD  > ReadWrite
    </p>
  </div>
 </div>

</p>
<p class='vspace'></p><h2>Using the SD library to read and write to a file on a SD card</h2>
<p>This example shows how to read and write data to and from an SD card. Please <a class='wikilink' href='//www.arduino.cc/en/Reference/SD'>click here</a> for more information on the SD library. 
</p>
<p class='vspace'></p><div  class='BOM' >
<h3>Hardware Required</h3>
<ul><li>Arduino or Genuino board
</li><li>Ethernet Shield (or other board with an SD slot)
</li><li>Formatted SD card
</li></ul></div>
<p class='vspace'></p><h3>Circuit</h3>
<div  class='circuit' >
<div> <a class='urllink' href='//www.arduino.cc/en/uploads/Tutorial/EthernetShield_Fritz.png' rel='nofollow'><img height='250px' src='//www.arduino.cc/en/uploads/Tutorial/EthernetShield_Fritz.png' alt='' title='' /></a></div>
<p class='vspace'></p><p><span style='font-size:83%'>image developed using <a class='urllink' href='http://www.fritzing.org' rel='nofollow'>Fritzing</a>. For more circuit examples, see the <a class='urllink' href='http://fritzing.org/projects/' rel='nofollow'>Fritzing project page</a> </span>
</p>
<p class='vspace'></p><p>The Arduino or Genuino board has to be connected to  the Ethernet Shield and also has a USB cable connected to the computer.
</p>
<p class='vspace'></p><h3>Schematics</h3>
<div> <a class='urllink' href='//www.arduino.cc/en/uploads/Tutorial/Ethernet_Shield_Sch.png' rel='nofollow'><img height='250px' src='//www.arduino.cc/en/uploads/Tutorial/Ethernet_Shield_Sch.png' alt='' title='' /></a></div>
<p class='vspace'></p><p><span style='font-size:83%'>image developed using <a class='urllink' href='http://www.fritzing.org' rel='nofollow'>Fritzing</a>. For more circuit examples, see the <a class='urllink' href='http://fritzing.org/projects/' rel='nofollow'>Fritzing project page</a> </span>
</p>
<p class='vspace'></p></div>
<p class='vspace'></p><h3>Code</h3>
<p>The code below is configured for use with an Ethernet shield, which has an onboard SD slot. In the <code>setup()</code>, we call <code>SD.begin()</code>, naming pin 4 as the CS pin. This pin varies depending on the make of shield or board you are using.
</p>
<p class='vspace'></p><p>In <code>setup()</code>, create a new file with <code>SD.open()</code> named "test.txt".  <code>FILE_WRITE</code> enables read and write access to the file, starting at the end. If a file "test.txt" was already on the card, that file would be opened. 
</p>
<p class='vspace'></p><p>Name the instance of the opened file "myFile".
</p>
<p class='vspace'></p><p>Once opened, use <code>myFile.println()</code> to write a string to the card, followed by a carriage return. Once the content is written, close the file.  
</p>
<p class='vspace'></p><p>Again, open the file with <code>SD.open()</code>.  Once opened, ask the Arduino to read the contents of the file with <code>SD.read()</code> and send them over the serial port. After all the contents of the file are read, close the file with <code>SD.close()</code>.
</p>
<p class='vspace'></p><div  class='code' >
<p>
<div class='sourceblock ' id='sourceblock1'>
  <div class='sourceblocktext'><div class="arduino"><span class="coMULTI">/*<br />
&nbsp; SD card read/write<br />
<br />
&nbsp;This example shows how to read and write data to and from an SD card file<br />
&nbsp;The circuit:<br />
&nbsp;* SD card attached to SPI bus as follows:<br />
&nbsp;** MOSI - pin 11<br />
&nbsp;** MISO - pin 12<br />
&nbsp;** CLK - pin 13<br />
&nbsp;** CS - pin 4 (for MKRZero SD: SDCARD_SS_PIN)<br />
<br />
&nbsp;created &nbsp; Nov 2010<br />
&nbsp;by David A. Mellis<br />
&nbsp;modified 9 Apr 2012<br />
&nbsp;by Tom Igoe<br />
<br />
&nbsp;This example code is in the public domain.<br />
<br />
&nbsp;*/</span><br />
<br />
<span class="co2">#include &lt;SPI.h&gt;</span><br />
<span class="co2">#include &lt;SD.h&gt;</span><br />
<br />
File myFile<span class="sy0">;</span><br />
<br />
<span class="kw1">void</span> <span class="kw3">setup</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="co1">// Open serial communications and wait for port to open:</span><br />
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">begin</span><span class="br0">&#40;</span><span class="nu0">9600</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span><span class="sy0">!</span><span class="kw1">Serial</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="sy0">;</span> <span class="co1">// wait for serial port to connect. Needed for native USB port only</span><br />
&nbsp; <span class="br0">&#125;</span><br />
<br />
<br />
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">&#40;</span><span class="st0">&quot;Initializing SD card...&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
<br />
&nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span><span class="sy0">!</span>SD.<span class="kw1">begin</span><span class="br0">&#40;</span><span class="nu0">4</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;initialization failed!&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span><span class="nu0">1</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="br0">&#125;</span><br />
&nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;initialization done.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
<br />
&nbsp; <span class="co1">// open the file. note that only one file can be open at a time,</span><br />
&nbsp; <span class="co1">// so you have to close this one before opening another.</span><br />
&nbsp; myFile <span class="sy0">=</span> SD.<span class="me1">open</span><span class="br0">&#40;</span><span class="st0">&quot;test.txt&quot;</span><span class="sy0">,</span> FILE_WRITE<span class="br0">&#41;</span><span class="sy0">;</span><br />
<br />
&nbsp; <span class="co1">// if the file opened okay, write to it:</span><br />
&nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>myFile<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">print</span><span class="br0">&#40;</span><span class="st0">&quot;Writing to test.txt...&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; myFile.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;testing 1, 2, 3.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; <span class="co1">// close the file:</span><br />
&nbsp; &nbsp; myFile.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;done.&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="co1">// if the file didn't open, print an error:</span><br />
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;error opening test.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="br0">&#125;</span><br />
<br />
&nbsp; <span class="co1">// re-open the file for reading:</span><br />
&nbsp; myFile <span class="sy0">=</span> SD.<span class="me1">open</span><span class="br0">&#40;</span><span class="st0">&quot;test.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="kw1">if</span> <span class="br0">&#40;</span>myFile<span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;test.txt:&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
<br />
&nbsp; &nbsp; <span class="co1">// read from the file until there's nothing else in it:</span><br />
&nbsp; &nbsp; <span class="kw1">while</span> <span class="br0">&#40;</span>myFile.<span class="kw1">available</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">write</span><span class="br0">&#40;</span>myFile.<span class="kw1">read</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; &nbsp; <span class="br0">&#125;</span><br />
&nbsp; &nbsp; <span class="co1">// close the file:</span><br />
&nbsp; &nbsp; myFile.<span class="me1">close</span><span class="br0">&#40;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="br0">&#125;</span> <span class="kw1">else</span> <span class="br0">&#123;</span><br />
&nbsp; &nbsp; <span class="co1">// if the file didn't open, print an error:</span><br />
&nbsp; &nbsp; <span class="kw1">Serial</span>.<span class="kw1">println</span><span class="br0">&#40;</span><span class="st0">&quot;error opening test.txt&quot;</span><span class="br0">&#41;</span><span class="sy0">;</span><br />
&nbsp; <span class="br0">&#125;</span><br />
<span class="br0">&#125;</span><br />
<br />
<span class="kw1">void</span> <span class="kw3">loop</span><span class="br0">&#40;</span><span class="br0">&#41;</span> <span class="br0">&#123;</span><br />
&nbsp; <span class="co1">// nothing happens after setup</span><br />
<span class="br0">&#125;</span></div></div>
  <div class='sourceblocklink'><a href='//www.arduino.cc/en/Tutorial/ReadWrite?action=sourceblock&amp;num=1' type='text/plain'>[Get Code]</a></div>
</div>

</p></div>
<p class='vspace'></p><h3>See Also</h3>
<ul><li><a class='wikilink' href='//www.arduino.cc/en/Reference/SD'>SD library</a> - Your reference for the SD Card library.
</li><li><a class='wikilink' href='//www.arduino.cc/en/Reference/SDCardNotes'>Notes on using SD cards</a> – What you need to know when you use SD cards
</li></ul><p><br />
</p><ul><li><a class='wikilink' href='//www.arduino.cc/en/Tutorial/CardInfo'>CardInfo</a> - Get info about your SD card.
</li><li><a class='wikilink' href='//www.arduino.cc/en/Tutorial/Datalogger'>Datalogger</a> - How to log data from three analog sensors to an SD card.
</li><li><a class='wikilink' href='//www.arduino.cc/en/Tutorial/DumpFile'>DumpFile</a> - How to read a file from the SD card.
</li><li><a class='wikilink' href='//www.arduino.cc/en/Tutorial/Files'>Files</a> -  How to create and destroy an SD card file.
</li><li><a class='wikilink' href='//www.arduino.cc/en/Tutorial/Listfiles'>Listfiles</a> -  How print out the files in a directory on a SD card.
</li></ul><p><br />
<em>Last revision 2015/08/18 by SM</em>
</p>
</div>


				<!-- AddThis Button Style BEGIN -->
<style>
  .addthis_toolbox {
    margin: 2em 0 1em;
  }
  .addthis_toolbox img {
    float: left;
    height: 25px;
    margin-right: 10px;
    width: auto;
  }
  .addthis_toolbox .social-container {
    float: left;
    height: 27px; 
    width: auto; 
  }
  .addthis_toolbox .social-container .social-content {
    float: left;
    margin-top: 2px;
    max-width: 0;
    overflow: hidden;
    -moz-transition: max-width .3s ease-out;
    -webkit-transition: max-width .3s ease-out;
    -o-transition: max-width .3s ease-out;
    transition: max-width .3s ease-out;
  }
  .addthis_toolbox .social-container:hover .social-content {
    max-width: 100px;
    -moz-transition: max-width .2s ease-in;
    -webkit-transition: max-width .2s ease-in;
    -o-transition: max-width .2s ease-in;
    transition: max-width .2s ease-in;
  }
  .addthis_toolbox .social-container .social-content a {
    float: left;
    margin-right: 5px;
  }

  .addthis_toolbox h3 {
    font-size: 24px;
    text-align: left;
  }
</style>
<!-- AddThis Button Style END -->
<!-- AddThis Button BEGIN -->
<div class="addthis_toolbox addthis_default_style">
  <h3>Share</h3>
  <!-- FACEBOOK -->
  <div class="social-container">
    <img src="/en/pub/skins/arduinoWide_SSO/img/facebook.png" />
    <div class="social-content">
      <a class="addthis_button_facebook_like" fb:like:layout="button_count"></a>
    </div>
  </div>
  <!-- TWITTER -->
  <div class="social-container">
    <img src="/en/pub/skins/arduinoWide_SSO/img/twitter.png">
    <div class="social-content">
      <a class="addthis_button_tweet"></a>
    </div>
  </div>
  <!-- PINTEREST -->
  <div class="social-container">
    <img src="/en/pub/skins/arduinoWide_SSO/img/pinterest.png">
    <div class="social-content">
      <a class="addthis_button_pinterest_pinit" pi:pinit:url="//www.addthis.com/features/pinterest" pi:pinit:media="//www.addthis.com/cms-content/images/features/pinterest-lg.png"></a>
    </div>
  </div>
  <!-- G+ -->
  <div class="social-container">
    <img src="/en/pub/skins/arduinoWide_SSO/img/gplus.png">
    <div class="social-content">
      <a class="addthis_button_google_plusone" g:plusone:size="medium"></a>
    </div>
  </div>

  <script type="text/javascript">var addthis_config = {"data_track_addressbar":false};</script>
  <script type="text/javascript" src="//s7.addthis.com/js/300/addthis_widget.js#pubid=ra-50573fab238b0d34"></script>
</div>
<!-- AddThis Button END -->

		</div> <!-- eof pagetext -->

	</div> <!-- eof page -->


	<div id="pagefooter">
		<div id="newsletter-modal"></div>
        <div id="footer"></div>
	</div>

	<!-- Common Header and Footer Resources -->
    <script src="https://cdn.arduino.cc/header-footer/loader.js" type="text/javascript"></script>

	<!--[if gte IE 9]><!-->
	<script src="//content.arduino.cc/legacy/js/foundation.min.js"></script>
	<!--<![endif]-->
	<!--[if IE 8]>
	<script src="//content.arduino.cc/legacy/js/foundation_ie8.min.js"></script>
	<script src="//content.arduino.cc/legacy/js/ie8/jquery.foundation.orbit.js"></script>
	<script src="//content.arduino.cc/legacy/js/ie8/jquery.foundation.alerts.js"></script>
	<script src="//content.arduino.cc/legacy/js/app.js"></script>

	<script>
	$(window).load(function(){
	  $("#featured").orbit();
	});
	</script>
	<![endif]-->

	<script type="text/javascript">
		$(function() {
			$(document).foundation();

(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
(i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
})(window,document,'script','https://www.google-analytics.com/analytics.js','ga');

ga('create', 'UA-22581631-3', 'auto');
ga('send', 'pageview');

			$('a').each (function () {
			  href = $(this).attr ('href');
			  if (href !== undefined && href.substring (0, 4) == 'http' && href.indexOf ('arduino.cc') == -1)
			    $(this).attr ('target', '_blank');
			});

			// js for language dropdown
			$('.language-dropdown .current').on('click', function(e){
			  e.stopPropagation();
			  $('.language-dropdown ul').toggle();
			});

			$('.language-dropdown .selector').on('click', function(e){
			  e.stopPropagation();
			  $('.language-dropdown ul').toggle();
			});

			$(document).on('click', function(){
			  $('.language-dropdown ul:visible').hide();
			});

			$('.language-dropdown li a').on('click', function(e){
				$('.language-dropdown .current').text($(this).text());
			});

			//js for product pages navbar
			var menu = $(".product-page-nav");
			var menuItems = menu.find("a");
			var timeoutId = null;
			var limitTop = 600;

			var menuOffset = $('.product-page-nav li').first().offset();
			if(menuOffset) {
				limitTop = menuOffset.top;
			}
			var limitBottom = $('.addthis_toolbox').offset().top;

			var activateSection = function($sectionToActivate) {
			  var label=$sectionToActivate.attr('label');

			  $(".product-page-nav").find('li').removeClass('active');
			  $sectionToActivate.addClass('active');
			};

			menuItems.click(function(e){

			 e.preventDefault();
			  var href = $(this).attr("href"),
			      offsetTop = href === "#" ? 0 : $(href).offset().top,
			      adjust = 0;
			  if($(this).parent('li').hasClass('active') === false) {

			      adjust = 80;

			      $('html, body').animate({
			            scrollTop: offsetTop - adjust
			        }, 1500, 'easeOutExpo');

			  }
			});

			$(window).scroll(function () {

			  var windscroll = $(window).scrollTop();

			  if(windscroll < limitTop) {
			    $('.menu').removeClass('sticky');
			    $('.menu').removeClass('fixed');
			  }  else {
			    $('.menu').addClass('sticky');
			  }

			  var menuEdgeBottomOffset = $('.menu.columns').offset();
			  var menuEdgeBottom = 0;
			  if(menuEdgeBottomOffset) {
			  	menuEdgeBottom = menuEdgeBottomOffset.top + $('.menu.columns').height();
			  }
			  if(menuEdgeBottom > limitBottom) {
			    $('.menu').fadeOut();
			  } else {
			    $('.menu').fadeIn();
			  }
			  menuItems.each(function(i) {
			    var href = $(this).attr("href");
			    if ($(href).offset().top <= windscroll + 150) {
			      if(timeoutId) {
			        clearTimeout(timeoutId);
			      }
			      timeoutId = setTimeout(activateSection, 60, $(".product-page-nav").find('li').eq(i));
			    }
			  });

			});


			// COMMON HEADER and FOOTER Loading
			var authOptions = {
				authURI: "https://auth.arduino.cc/login",
				redirectURI: "https://www.arduino.cc",
				clientID: "arduinocc",
				scopes: ["profile:core", "profile:public"]
			};
	        ArduinoHeaderAndFooter({auth: 'default', authOptions: authOptions});


			//Facebook Pixel Code
			!function(f,b,e,v,n,t,s){if(f.fbq)return;n=f.fbq=function(){n.callMethod?
			n.callMethod.apply(n,arguments):n.queue.push(arguments)};if(!f._fbq)f._fbq=n;
			n.push=n;n.loaded=!0;n.version='2.0';n.queue=[];t=b.createElement(e);t.async=!0;
			t.src=v;s=b.getElementsByTagName(e)[0];s.parentNode.insertBefore(t,s)}(window,
			document,'script','https://connect.facebook.net/en_US/fbevents.js');

			fbq('init', '1205220922863531');
			fbq('track', "PageView");

		});
	</script>

	<noscript><img height="1" width="1" style="display:none" src="https://www.facebook.com/tr?id=1205220922863531&ev=PageView&noscript=1"/></noscript>
	<!-- End Facebook Pixel Code -->
</body>
</html>
