<html><head></head><body><pre style="word-wrap: break-word; white-space: pre-wrap;">/**
 * Timeago is a jQuery plugin that makes it easy to support automatically
 * updating fuzzy timestamps (e.g. "4 minutes ago" or "about 1 day ago").
 *
 * @name timeago
 * @version 0.11.3
 * @requires jQuery v1.2.3+
 * @author Ryan McGeary
 * @license MIT License - http://www.opensource.org/licenses/mit-license.php
 *
 * For usage and examples, visit:
 * http://timeago.yarp.com/
 *
 * Copyright (c) 2008-2012, Ryan McGeary (ryan -[at]- mcgeary [*dot*] org)
 */
(function($) {
  $.timeago = function(timestamp) {
    if (timestamp instanceof Date) {
      return inWords(timestamp);
    } else if (typeof timestamp === "string") {
      return inWords($.timeago.parse(timestamp));
    } else if (typeof timestamp === "number") {
      return inWords(new Date(timestamp));
    } else {
      return inWords($.timeago.datetime(timestamp));
    }
  };
  var $t = $.timeago;

  $.extend($.timeago, {
    settings: {
      refreshMillis: 60000,
      allowFuture: false,
      strings: {
        prefixAgo: null,
        prefixFromNow: null,
        suffixAgo: "Ù¾ÛŒØ´",
        suffixFromNow: "Ù‡Ù… Ø§Ú©Ù†ÙˆÙ†",
        seconds: "Ú©Ù…ØªØ± Ø§Ø² 1 Ø¯Ù‚ÛŒÙ‚Ù‡",
        minute: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø¯Ù‚ÛŒÙ‚Ù‡",
        minutes: "%d Ø¯Ù‚ÛŒÙ‚Ù‡",
        hour: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø³Ø§Ø¹Øª",
        hours: "Ø­Ø¯ÙˆØ¯ %d Ø³Ø§Ø¹Øª",
        day: "ÛŒÚ© Ø±ÙˆØ²",
        days: "%d Ø±ÙˆØ²",
        month: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ù…Ø§Ù‡",
        months: "%d Ù…Ø§Ù‡",
        year: "Ø­Ø¯ÙˆØ¯ ÛŒÚ© Ø³Ø§Ù„",
        years: "%d Ø³Ø§Ù„",
        wordSeparator: " ",
        numbers: []
      }
    },
    inWords: function(distanceMillis) {
      var $l = this.settings.strings;
      var prefix = $l.prefixAgo;
      var suffix = $l.suffixAgo;
      if (this.settings.allowFuture) {
        if (distanceMillis &lt; 0) {
          prefix = $l.prefixFromNow;
          suffix = $l.suffixFromNow;
        }
      }

      var seconds = Math.abs(distanceMillis) / 1000;
      var minutes = seconds / 60;
      var hours = minutes / 60;
      var days = hours / 24;
      var years = days / 365;

      function substitute(stringOrFunction, number) {
        var string = $.isFunction(stringOrFunction) ? stringOrFunction(number, distanceMillis) : stringOrFunction;
        var value = ($l.numbers &amp;&amp; $l.numbers[number]) || number;
        return string.replace(/%d/i, value);
      }

      var words = seconds &lt; 45 &amp;&amp; substitute($l.seconds, Math.round(seconds)) ||
        seconds &lt; 90 &amp;&amp; substitute($l.minute, 1) ||
        minutes &lt; 45 &amp;&amp; substitute($l.minutes, Math.round(minutes)) ||
        minutes &lt; 90 &amp;&amp; substitute($l.hour, 1) ||
        hours &lt; 24 &amp;&amp; substitute($l.hours, Math.round(hours)) ||
        hours &lt; 42 &amp;&amp; substitute($l.day, 1) ||
        days &lt; 30 &amp;&amp; substitute($l.days, Math.round(days)) ||
        days &lt; 45 &amp;&amp; substitute($l.month, 1) ||
        days &lt; 365 &amp;&amp; substitute($l.months, Math.round(days / 30)) ||
        years &lt; 1.5 &amp;&amp; substitute($l.year, 1) ||
        substitute($l.years, Math.round(years));

      var separator = $l.wordSeparator === undefined ?  " " : $l.wordSeparator;
      return $.trim([prefix, words, suffix].join(separator));
    },
    parse: function(iso8601) {
      var s = $.trim(iso8601);
      s = s.replace(/\.\d\d\d+/,""); // remove milliseconds
      s = s.replace(/-/,"/").replace(/-/,"/");
      s = s.replace(/T/," ").replace(/Z/," UTC");
      s = s.replace(/([\+\-]\d\d)\:?(\d\d)/," $1$2"); // -04:00 -&gt; -0400
      return new Date(s);
    },
    datetime: function(elem) {
      var iso8601 = $t.isTime(elem) ? $(elem).attr("datetime") : $(elem).attr("title");
      return $t.parse(iso8601);
    },
    isTime: function(elem) {
      // jQuery's `is()` doesn't play well with HTML5 in IE
      return $(elem).get(0).tagName.toLowerCase() === "time"; // $(elem).is("time");
    }
  });

  $.fn.timeago = function() {
    var self = this;
    self.each(refresh);

    var $s = $t.settings;
    if ($s.refreshMillis &gt; 0) {
      setInterval(function() { self.each(refresh); }, $s.refreshMillis);
    }
    return self;
  };

  function refresh() {
    var data = prepareData(this);
    if (!isNaN(data.datetime)) {
      $(this).text(inWords(data.datetime));
    }
    return this;
  }

  function prepareData(element) {
    element = $(element);
    if (!element.data("timeago")) {
      element.data("timeago", { datetime: $t.datetime(element) });
      var text = $.trim(element.text());
      if (text.length &gt; 0 &amp;&amp; !($t.isTime(element) &amp;&amp; element.attr("title"))) {
        element.attr("title", text);
      }
    }
    return element.data("timeago");
  }

  function inWords(date) {
    return $t.inWords(distance(date));
  }

  function distance(date) {
    return (new Date().getTime() - date.getTime());
  }

  // fix for IE6 suckage
  document.createElement("abbr");
  document.createElement("time");
}(jQuery));
</pre></body></html>