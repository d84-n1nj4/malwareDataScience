<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta http-equiv='Content-Type' content='text/html; charset=UTF-8'>
<meta http-equiv="X-UA-Compatible" content="IE=edge">
<meta name="viewport" content="width=900">
<title>Java Tutorial - Java Hello World</title>
<meta http-equiv='content-style-type' content='text/css'>
<meta name='author' content=''Demo Source and Support Ltd.'>
<meta name='copyright' content='2013 Demo Source and Support Ltd.'>
<meta name='description' content='Java Tutorial - Java Hello World'>
<meta name='keywords' content='Java Tutorial - Java Hello World'>
<link rel='shortcut icon' href='http://www.java2s.com/style/favicon.ico'>
<link href="http://java2s.com/style/bootstrap.min.css" rel="stylesheet">
<link href="http://java2s.com/style/longTutorial.css" rel="stylesheet">
<script src="http://java2s.com/style/jquery-1.11.0.js"></script>
<script src="http://java2s.com/style/bootstrap.min.js"></script>
<!-- HTML5 Shim and Respond.js IE8 support of HTML5 elements and media queries -->
<!-- WARNING: Respond.js doesn't work if you view the page via file:-->
<!--[if lt IE 9]>
<script src="https://oss.maxcdn.com/libs/html5shiv/3.7.0/html5shiv.js"></script>
<script src="https://oss.maxcdn.com/libs/respond.js/1.4.2/respond.min.js"></script>
<![endif]-->
<script>
$(document).ready(function() {
  $('[data-toggle=offcanvas]').click(function() {
    $('.row-offcanvas').toggleClass('active');
  });
});
</script>	
</head><body>
<div class="container-fluid">
   <div class="row row-offcanvas row-offcanvas-left">
      <div class="col-sm-3 col-md-3 sidebar-offcanvas" id="sidebar" role="navigation">
         <ul class="nav nav-sidebar"><li class='tag'>Website Home</li><li><a href='http://www.java2s.com'>HOME</a></li><li class='tag'>Java Introduction</li><li class='active'><a href=''>Java Hello World</a></li><li><a href='1010__Java_Keywords.htm'>Java Keywords</a></li><li><a href='1020__Java_Variables.htm'>Java Variables</a></li><li class='tag'>Java Data Type</li><li><a href='2005__Java_Data_Type.htm'>Java Data Type</a></li><li><a href='2010__Java_boolean.htm'>Java boolean</a></li><li><a href='2020__Java_whole_number.htm'>Java whole number</a></li><li><a href='2030__Java_Floating_Point.htm'>Java Floating Point</a></li><li><a href='2040__Java_char.htm'>Java char</a></li><li><a href='2050__Java_String.htm'>Java String</a></li><li><a href='2060__Java_Array.htm'>Java Array</a></li><li class='tag'>Java Operator</li><li><a href='3005__Java_Arithmetic_Operators.htm'>Java Arithmetic Operators</a></li><li><a href='3010__Java_Boolean_Operator.htm'>Java Boolean Operator</a></li><li><a href='3020__Java_Relational_Operators.htm'>Java Relational Operators</a></li><li><a href='3030__Java_ternary_operator.htm'>Java ternary operator</a></li><li><a href='3040__Java_Bitwise_Operators.htm'>Java Bitwise Operators</a></li><li class='tag'>Java Statement</li><li><a href='4010__Java_if.htm'>Java If</a></li><li><a href='4020__Java_switch.htm'>Java Switch</a></li><li><a href='4030__Java_for.htm'>Java For</a></li><li><a href='4040__Java_while.htm'>Java While</a></li><li><a href='4050__Java_break.htm'>Java Break</a></li><li><a href='4060__Java_Continue.htm'>Java Continue</a></li><li><a href='4070__Java_Comments.htm'>Java Comments</a></li><li class='tag'>Java Class</li><li><a href='5010__Java_Class.htm'>Java Class</a></li><li><a href='5020__Java_Method.htm'>Java Method</a></li><li><a href='5030__Java_Constructors.htm'>Java Constructors</a></li><li><a href='5040__Java_Access_Control.htm'>Java Access Control</a></li><li><a href='5050__Java_class_variable.htm'>Java Class Variables</a></li><li><a href='5060__Java_Nested_Class.htm'>Java Nested Class</a></li><li><a href='5070__Java_inheritance.htm'>Java inheritance</a></li><li><a href='5080__Java_Interface.htm'>Java Interface</a></li><li><a href='5090__Java_Abstract_Class.htm'>Java Abstract Class</a></li><li><a href='5100__Java_Variable_Type.htm'>Java Variable Type</a></li><li><a href='5110__Java_static_final.htm'>Java static final</a></li><li><a href='5120__Java_Package.htm'>Java Package</a></li><li class='tag'>Java Exception</li><li><a href='6000__Java_Exception.htm'>Java Exception</a></li><li><a href='6010__Java_Exception_Statements.htm'>Java Exception Statements</a></li><li><a href='6020__Java_Exception_Type.htm'>Java Exception Type</a></li><li class='tag'>Java Annotation</li><li><a href='7000__Java_Annotation.htm'>Java Annotations</a></li><li><a href='7010__Java_Annotation_Type.htm'>Java Annotation Type</a></li><li><a href='7030__Java_Buildin_annotations.htm'>Java Built-In Annotations</a></li><li class='tag'>Java Generic</li><li><a href='8000__Java_Generic_introduction.htm'>Java Generic Type</a></li><li><a href='8010__Java_generic_method.htm'>Java Generic Method</a></li><li><a href='8020__Java_generic_interface.htm'>Java Generic interface</a></li><li><a href='8030__Java_generic_hierarchy.htm'>Java Generic Class Hierarchies</a></li><li><a href='8040__Java_Generic_Constraints.htm'>Java Generic Constraints</a></li><li><a href='8050__Java_generic_restrictions.htm'>Java Generic Restrictions</a></li><li class='tag'>Java Enum</li><li><a href='9000__Java_enum.htm'>Java Enum</a></li><li><a href='9010__Java_enum_class.htm'>Java Enum Class</a></li></ul>          
       </div>
       <div class="col-sm-9 col-md-9">
          <!--<div class="visible-xs"><button type="button" class="btn btn-primary btn-xs" data-toggle="offcanvas">Menu</button></div>-->
          <form class="form-inline pull-right" action="http://www.google.com/cse" id="cse-search-box">
             <fieldset>
                <label class="control-label">
                <input type="hidden" name="cx" value="partner-pub-1130008796007602:iri8be-v211"/>
                <input type="hidden" name="ie" value="ISO-8859-1" />        
                <input type="text" size='15' name="q">
                <input type="submit" name="sa" value="Search"/>
             </fieldset>
          </form>
          <script type="text/javascript" src="http://www.google.com/cse/brand?form=cse-search-box&amp;lang=en"></script>
		  <div class='row'><div class='col-lg-12'><h1>Java Tutorial - Java Hello World</h1><ul class='pager'><li class='next'><a href='1010__Java_Keywords.htm'>Next&nbsp;&#xBB;</a></li></ul><br/><br/><br/><script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";google_ad_width=728;google_ad_height=90;google_ad_format="728x90_as";google_ad_type="text_image";google_ad_channel="";google_color_border="ffffff";google_color_bg="ffffff";google_color_link="003399";google_color_text="000000";google_color_url="75a3ed";
//--></script><script type="text/javascript"src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script><br/><br/><br/><br/><p>Let's start by compiling and running the following short sample program.</p>

<pre>
<span class='c'>/* <span style='color:#aa9ba9'>/</span><span style='color:#9a99ab'>/</span><span style='color:#bbaaba'>f</span><span style='color:#b999a9'>r</span><span style='color:#a9b99a'>o</span><span style='color:#aab9aa'>m</span><span style='color:#b9aabb'> </span><span style='color:#b9abab'> </span><span style='color:#abb9bb'>w</span><span style='color:#baaaaa'> </span><span style='color:#aabb99'>w</span><span style='color:#ab9abb'> </span><span style='color:#9b999a'>w</span><span style='color:#aaaaba'> </span><span style='color:#baa9aa'> </span><span style='color:#9bbb9a'>.</span><span style='color:#a9ab99'> </span><span style='color:#9999b9'> </span><span style='color:#9ba9b9'>j</span><span style='color:#9999ba'> </span><span style='color:#abbbaa'> </span><span style='color:#aa9bbb'>a</span><span style='color:#b99a99'>v</span><span style='color:#b9999a'>a</span><span style='color:#ab9ab9'> </span><span style='color:#9bb99b'> </span><span style='color:#a999ab'>2</span><span style='color:#9a9ba9'>s</span><span style='color:#bb9999'>.</span><span style='color:#babaab'> </span><span style='color:#ab9bba'>c</span><span style='color:#99999a'> </span><span style='color:#9aa999'>o</span><span style='color:#aba9bb'> </span><span style='color:#b9abb9'>m</span>
 This is a simple Java program. Call this file "Main.java". 
 */</span>

<span class='r'>public</span> <span class='r'>class</span> Main {
  <span class='c'>// Your program begins with a call to main().
</span>  <span class='r'>public</span> <span class='r'>static</span> <span class='r'>void</span> main(String args[]) {
    System.out.println(<span class='q'>"Java."</span>);
  }
}
</pre>

<p>In Java, a source file is called a compilation unit. 
It is a text file that contains one or more class definitions. 
The Java compiler requires that a source file use the .java filename extension. </p>

<p>In Java, all code must reside inside a class. 
By convention, the name of the public class should match the its file name. 
And Java is case-sensitive. </p>
<p>The code above generates the following result.</p>
<img src='../../JavaImage/myResult/D/DESCRIPTION__19A1CA8D9E9ACEFF0BC3.PNG'/><div><br/><br/>
<script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";
google_ad_width=300;
google_ad_height=250;
google_ad_format="300x250_as";
google_ad_type="text_image";
google_ad_channel="";
google_color_border="ffffff";
google_color_bg="FFFFFF";
google_color_link="0077cc";
google_color_url="0077cc";
google_color_text="000000";
//--></script>
<script type="text/javascript" 
      src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<br/><br/></div><h2 id='Compiling_the_Program'>Compiling the Program</h2><p>To compile the program, execute the compiler, <code>javac</code>, specifying the name of 
the source file on the command line:</p> 


<pre>
C:\&gt;javac Main.java 
</pre>

<p>The <code>javac</code> compiler creates a file called <code>Main.class</code>. 
<code>Main.class</code> contains the byte code version of the program. </p>

<p>To run the program, use the Java interpreter, called <code>java</code>. 
Pass the class name <code>Main</code> as a command-line argument, as shown here: </p>

<pre>
C:\&gt;java Main 
</pre>

<p>When the program is run, the following output is displayed: </p>

<img src='../../JavaImage/myResult/H/HOW_TO_COMPILE_A_JAVA_PROGRAM__3DF1DE83C5EF99B56A39.PNG'/>

<p>When Java source code is compiled, each individual class is put into its own file named <code>classname.class</code>.</p><div><br/><br/>
<script type="text/javascript"><!--
google_ad_client="pub-1130008796007602";
google_ad_width=300;
google_ad_height=250;
google_ad_format="300x250_as";
google_ad_type="text_image";
google_ad_channel="";
google_color_border="ffffff";
google_color_bg="FFFFFF";
google_color_link="0077cc";
google_color_url="0077cc";
google_color_text="000000";
//--></script>
<script type="text/javascript" 
      src="http://pagead2.googlesyndication.com/pagead/show_ads.js"></script>
<br/><br/></div><h2 id='A_Closer_Look_at_the_Main_java'>A Closer Look at the Main.java</h2><p>The first part is a comment. </p>


<pre>
/* 
   This is a simple Java program. Call this file <span class='q'>"Main.java"</span>. 
*/ 
</pre>
<p>Comment is a remark for a program. 
   The contents of a comment are ignored by the compiler. 
   The next line of code in the program is shown here: </p>


<pre>
<span class='r'>public</span> <span class='r'>class</span> Main { 
</pre>

<p>The keyword <code>class</code> declares that a new class is being defined.
<code>Main</code> is the name of the class.
The entire class definition is between the opening curly brace (<code>{</code>) and the closing curly brace (<code>}</code>).
The next line in the program is the single-line comment, shown here: </p>


<pre>
// Your program begins with a call to main(). 
</pre>

<p>A single-line comment begins with a <code>//</code> and ends at the end of the line. 
   The next line of code is shown here: </p>

<pre>
<span class='r'>public</span> <span class='r'>static</span> void main(String args[]) { 
</pre>

<p>Java applications begin execution by calling <code>main(String args[])</code>. 
Java is case-sensitive. Thus, <code>Main</code> is different from <code>main</code>. 
</p><h2 id='A_Short_Program_with_a_variable'>A Short Program with a variable</h2><p>A variable is a memory location that may be assigned a value.
   The value of a variable is changeable.
</p>
<p>The following code defines a variable and change its value by assigning a new value to it.</p>
<pre>
<span class='r'>public</span> <span class='r'>class</span> Main {
  <span class='r'>public</span> <span class='r'>static</span> <span class='r'>void</span> main(String args[]) {
    <span class='r'>int</span> num; <span class='c'>// a variable called num
</span>    num = 100;<span style='color:#aaaba9'>/</span><span style='color:#aaaaab'>/</span><span style='color:#abb9a9'> </span><span style='color:#aa9aba'> </span><span style='color:#aa9ab9'>w</span><span style='color:#bb9b99'> </span><span style='color:#babaab'> </span><span style='color:#aabaab'>w</span><span style='color:#aa9aaa'> </span><span style='color:#9bb99a'>w</span><span style='color:#bab9aa'> </span><span style='color:#aab9aa'> </span><span style='color:#99ba9a'>.</span><span style='color:#bbb9aa'>j</span><span style='color:#a9a9bb'>a</span><span style='color:#9babab'> </span><span style='color:#baa9bb'>v</span><span style='color:#99ba9a'> </span><span style='color:#ba9aba'>a</span><span style='color:#ba9baa'> </span><span style='color:#a999bb'>2</span><span style='color:#9aa9aa'>s</span><span style='color:#a99bbb'> </span><span style='color:#a9abba'> </span><span style='color:#bbabb9'>.</span><span style='color:#9baaab'>c</span><span style='color:#bab999'>o</span><span style='color:#baaba9'>m</span>

    System.out.println(<span class='q'>"This is num: "</span> + num);
    num = num * 2;

    System.out.print(<span class='q'>"The value of num * 2 is "</span>);
    System.out.println(num);
  }
}
</pre>
<p>
When you run this program, you will see the following output: </p>
<img src='../../JavaImage/myResult/H/HOW_TO_DEFINE_VARIABLES_AND_STORE_VALUE_INTO_THEM__D8826F0752CE93FD1FA2.PNG'/>
<p>
The following snippet declares an integer variable called <code>num</code>. 
Java requires that variables must be declared before they can be used. 
</p>


<pre>
int num; // this declares a variable called num 
</pre>

<p>
Following is the general form of a variable declaration: </p>


<pre>
type <span class='r'>var</span>-name; 
</pre>

<p>In the program, the line assigns to <code>num</code> the value 100.</p>


<pre>
num = 100; // this assigns num the value 100 
</pre><h2 id='Define_more_than_one_variable_with_comma'>Define more than one variable with comma</h2><p>To declare more than one variable of the specified type, you may 
use a comma-separated list of variable names.</p>

<pre>
<span class='r'>public</span> <span class='r'>class</span> Main {
  <span class='r'>public</span> <span class='r'>static</span> <span class='r'>void</span> main(String args[]) {
    <span class='r'>int</span> num, num2;
    num = 100; <span class='c'>// assigns num the value 100
</span>    num2 = 200;<span style='color:#9aaab9'>/</span><span style='color:#b99ba9'>/</span><span style='color:#abab9a'>f</span><span style='color:#ab9abb'>r</span><span style='color:#a9aa9b'>o</span><span style='color:#9bb99a'>m</span><span style='color:#9999ab'> </span><span style='color:#a9ab9b'> </span><span style='color:#bbbbba'>w</span><span style='color:#bbbbbb'> </span><span style='color:#bbabab'> </span><span style='color:#abba9a'>w</span><span style='color:#bbb999'> </span><span style='color:#ab9bbb'>w</span><span style='color:#aabab9'>.</span><span style='color:#abab9b'> </span><span style='color:#9aa99b'> </span><span style='color:#9aa9a9'>j</span><span style='color:#a9bbbb'> </span><span style='color:#9aba9a'>a</span><span style='color:#b9ba99'>v</span><span style='color:#9ababb'> </span><span style='color:#aaba99'>a</span><span style='color:#aaa99a'>2</span><span style='color:#99aaba'> </span><span style='color:#ba9b99'>s</span><span style='color:#b99b9a'> </span><span style='color:#ab9ab9'> </span><span style='color:#b9ab9b'>.</span><span style='color:#99bab9'>c</span><span style='color:#bbabbb'> </span><span style='color:#9aa9b9'>o</span><span style='color:#abbb9a'> </span><span style='color:#9b99a9'> </span><span style='color:#9babb9'>m</span>
    System.out.println(<span class='q'>"This is num: "</span> + num);
    System.out.println(<span class='q'>"This is num2: "</span> + num2);

  }
}
</pre>
<p>When the program is run, the following output is displayed: </p>

<img src='../../JavaImage/myResult/H/HOW_TO_DEFINE_MORE_VARIABLES_AND_SEPARATE_THEM_WITH_COMMA__22B49155D379A6A8FCE0.PNG'/><h2 id='Using_Blocks_of_Code'>Using Blocks of Code</h2><p>
Java can group two or more statements into blocks of code. 
Code block is enclosing the statements between opening and closing curly braces({}). 
</p>
<p>
For example, a block can be a target for Java's <code>if</code> and <code>for</code> statements. 
Consider this <code>if</code> statement:
</p>

<pre>
<span class='r'>public</span> <span class='r'>class</span> Main {
    <span class='r'>public</span> <span class='r'>static</span> <span class='r'>void</span> main(String args[]) {
        <span class='r'>int</span> x, y;
        x = 10;<span style='color:#abb9bb'>/</span><span style='color:#aaabbb'>*</span><span style='color:#aab99b'> </span><span style='color:#9aa999'>w</span><span style='color:#9bbbaa'> </span><span style='color:#9bbaba'> </span><span style='color:#9bb9a9'>w</span><span style='color:#bb9a9b'> </span><span style='color:#99999a'>w</span><span style='color:#b9b9bb'> </span><span style='color:#aa9bbb'>.</span><span style='color:#abaa99'> </span><span style='color:#9ab9aa'>j</span><span style='color:#b9baab'>a</span><span style='color:#baba99'> </span><span style='color:#bbbb99'> </span><span style='color:#b99999'>v</span><span style='color:#b999b9'>a</span><span style='color:#b99bba'> </span><span style='color:#a9bb99'> </span><span style='color:#abba9b'>2</span><span style='color:#9ababa'> </span><span style='color:#a9bab9'>s</span><span style='color:#ba99b9'> </span><span style='color:#a9aa9a'> </span><span style='color:#9b9bba'>.</span><span style='color:#aaaa99'>c</span><span style='color:#99aa9b'> </span><span style='color:#ba9999'>o</span><span style='color:#9b9aab'> </span><span style='color:#bbb9bb'>m</span><span style='color:#99b9a9'>*</span><span style='color:#abbb9b'>/</span>
        y = 20;
        <span class='r'>if</span> (x &lt; y) { <span class='c'>// begin a block
</span>            x = y;
            y = 0;
            System.out.println(<span class='q'>"x="</span> + x);
            System.out.println(<span class='q'>"y="</span> + y);
        } <span class='c'>// end of block
</span>    }
}
</pre>

<p>Here is the output of the code above:
</p>
<img src='../../JavaImage/myResult/H/HOW_TO_CODE_BLOCK__3C5E028DA6FC07A9529A.PNG'/><h2 id='Example'>Example</h2><p>
A block of code as the target of a <code>for</code> loop.
</p>
<pre>
<span class='r'>public</span> <span class='r'>class</span> Main {
  <span class='r'>public</span> <span class='r'>static</span> <span class='r'>void</span> main(String args[]) {
    <span class='r'>int</span> i, y;<span style='color:#ba99bb'>/</span><span style='color:#9a99ab'>/</span><span style='color:#aa9999'>f</span><span style='color:#baa9bb'>r</span><span style='color:#9a9b99'>o</span><span style='color:#9b999b'>m</span><span style='color:#bb9ab9'> </span><span style='color:#99aba9'> </span><span style='color:#a9abab'>w</span><span style='color:#ab9bbb'>w</span><span style='color:#b9babb'> </span><span style='color:#9b9aab'> </span><span style='color:#abb99a'>w</span><span style='color:#bbb9b9'> </span><span style='color:#a99b9b'> </span><span style='color:#ba9ab9'>.</span><span style='color:#99ba99'> </span><span style='color:#bbaaba'> </span><span style='color:#9bbabb'>j</span><span style='color:#a9999b'> </span><span style='color:#aaabbb'>a</span><span style='color:#9aaabb'> </span><span style='color:#99bbaa'> </span><span style='color:#a99a99'>v</span><span style='color:#9b9aba'> </span><span style='color:#ab9999'> </span><span style='color:#9abb9a'>a</span><span style='color:#baaaba'> </span><span style='color:#b9b9bb'> </span><span style='color:#b99aaa'>2</span><span style='color:#9a9abb'> </span><span style='color:#9baaba'> </span><span style='color:#abbba9'>s</span><span style='color:#9bbbbb'>.</span><span style='color:#9aa99b'> </span><span style='color:#bbbaba'>c</span><span style='color:#9abab9'> </span><span style='color:#ba99ba'>o</span><span style='color:#abba9b'> </span><span style='color:#aabaab'>m</span>
    y = 20;
    <span class='r'>for</span> (i = 0; i &lt; 10; i++) { <span class='c'>// the target of this loop is a block
</span>      System.out.println(<span class='q'>"This is i: "</span> + i);
      System.out.println(<span class='q'>"This is y: "</span> + y);
      y = y - 1;

    }
  }
}
</pre>

<p>
The output generated by this program is shown here:
</p>

<img src='../../JavaImage/myResult/E/EXAMPLE__BCA93683D112C06D53DB.PNG'/><ul class='pager'><li class='button pull-right'><a href='1010__Java_Keywords.htm'>Next&nbsp;&#xBB;</a></li></ul></div></div>
       </div>
   </div>
   <footer>
      <p class='pull-right'><a href="http://www.java2s.com/">java2s.com</a>  &nbsp;|&nbsp;Email:info at java2s.com&nbsp;|&nbsp;&copy; Demo Source and Support. All rights reserved.</p>
   </footer>	
</div>
</body>
</html>
